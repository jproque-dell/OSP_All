parameter_defaults:
    ControllerExtraConfig:
        aodh::policy::policies: { 
            "aodh-telemetry:create_alarm": {
              "key": "telemetry:create_alarm",
              "value": "rule:deny_readonly"
              }, 
            "aodh-telemetry:query_alarm": {
              "key": "telemetry:query_alarm",
              "value": "rule:admin_or_owner"
              }, 
            "aodh-telemetry:get_alarm": {
              "key": "telemetry:get_alarm",
              "value": "rule:admin_or_owner"
              }, 
            "aodh-telemetry:query_alarm_history": {
              "key": "telemetry:query_alarm_history",
              "value": "rule:admin_or_owner"
              }, 
            "aodh-default": {
              "key": "default",
              "value": "rule:admin_or_owner"
              }, 
            "aodh-telemetry:change_alarm_state": {
              "key": "telemetry:change_alarm_state",
              "value": "rule:admin_or_owner and rule:deny_readonly"
              }, 
            "aodh-telemetry:get_alarm_state": {
              "key": "telemetry:get_alarm_state",
              "value": "rule:admin_or_owner"
              }, 
            "aodh-telemetry:get_alarms": {
              "key": "telemetry:get_alarms",
              "value": "rule:admin_or_owner"
              }, 
            "aodh-segregation": {
              "key": "segregation",
              "value": "rule:context_is_admin"
              }, 
            "aodh-telemetry:alarm_history": {
              "key": "telemetry:alarm_history",
              "value": "rule:admin_or_owner"
              }, 
            "aodh-context_is_admin": {
              "key": "context_is_admin",
              "value": "role:admin and rule:deny_readonly"
              }, 
            "aodh-telemetry:delete_alarm": {
              "key": "telemetry:delete_alarm",
              "value": "rule:admin_or_owner and rule:deny_readonly"
              }, 
            "aodh-deny_readonly": {
              "key": "deny_readonly",
              "value": "not role:readonly"
              }, 
            "aodh-telemetry:change_alarm": {
              "key": "telemetry:change_alarm",
              "value": "rule:admin_or_owner and rule:deny_readonly"
              }, 
            "aodh-admin_or_owner": {
              "key": "admin_or_owner",
              "value": "rule:context_is_admin or project_id:%(project_id)s"
              }
        }
        ceilometer::policy::policies: { 
            "ceilometer-telemetry:create_samples": {
              "key": "telemetry:create_samples",
              "value": "rule:deny_readonly"
              }, 
            "ceilometer-telemetry:query_sample": {
              "key": "telemetry:query_sample",
              "value": ""
              }, 
            "ceilometer-telemetry:get_meters": {
              "key": "telemetry:get_meters",
              "value": ""
              }, 
            "ceilometer-telemetry:get_sample": {
              "key": "telemetry:get_sample",
              "value": ""
              }, 
            "ceilometer-telemetry:compute_statistics": {
              "key": "telemetry:compute_statistics",
              "value": ""
              }, 
            "ceilometer-telemetry:get_samples": {
              "key": "telemetry:get_samples",
              "value": ""
              }, 
            "ceilometer-telemetry:get_resource": {
              "key": "telemetry:get_resource",
              "value": ""
              }, 
            "ceilometer-telemetry:events:index": {
              "key": "telemetry:events:index",
              "value": ""
              }, 
            "ceilometer-telemetry:get_resources": {
              "key": "telemetry:get_resources",
              "value": ""
              }, 
            "ceilometer-segregation": {
              "key": "segregation",
              "value": "rule:context_is_admin"
              }, 
            "ceilometer-telemetry:events:show": {
              "key": "telemetry:events:show",
              "value": ""
              }, 
            "ceilometer-context_is_admin": {
              "key": "context_is_admin",
              "value": "role:admin and rule:deny_readonly"
              }, 
            "ceilometer-deny_readonly": {
              "key": "deny_readonly",
              "value": "not role:readonly"
              }
        }
        cinder::policy::policies: { 
            "cinder-volume:create_volume_metadata": {
              "key": "volume:create_volume_metadata",
              "value": "rule:admin_or_owner and rule:deny_readonly"
              }, 
            "cinder-volume:delete_snapshot_metadata": {
              "key": "volume:delete_snapshot_metadata",
              "value": "rule:admin_or_owner and rule:deny_readonly"
              }, 
            "cinder-volume:failover_host": {
              "key": "volume:failover_host",
              "value": "rule:admin_api and rule:deny_readonly"
              }, 
            "cinder-volume_extension:capabilities": {
              "key": "volume_extension:capabilities",
              "value": "rule:admin_api"
              }, 
            "cinder-context_is_admin": {
              "key": "context_is_admin",
              "value": "role:admin and rule:deny_readonly"
              }, 
            "cinder-volume_extension:volume_admin_actions:force_detach": {
              "key": "volume_extension:volume_admin_actions:force_detach",
              "value": "rule:admin_api and rule:deny_readonly"
              }, 
            "cinder-backup:delete": {
              "key": "backup:delete",
              "value": "rule:admin_or_owner and rule:deny_readonly"
              }, 
            "cinder-volume_extension:volume_encryption_metadata": {
              "key": "volume_extension:volume_encryption_metadata",
              "value": "rule:admin_or_owner"
              }, 
            "cinder-volume_extension:volume_type_access": {
              "key": "volume_extension:volume_type_access",
              "value": "rule:admin_or_owner"
              }, 
            "cinder-message:get": {
              "key": "message:get",
              "value": "rule:admin_or_owner"
              }, 
            "cinder-volume_extension:quotas:update": {
              "key": "volume_extension:quotas:update",
              "value": "rule:admin_api and rule:deny_readonly"
              }, 
            "cinder-snapshot_extension:snapshot_actions:update_snapshot_status": {
              "key": "snapshot_extension:snapshot_actions:update_snapshot_status",
              "value": "rule:deny_readonly"
              }, 
            "cinder-scheduler_extension:scheduler_stats:get_pools": {
              "key": "scheduler_extension:scheduler_stats:get_pools",
              "value": "rule:admin_api"
              }, 
            "cinder-backup:restore": {
              "key": "backup:restore",
              "value": "rule:admin_or_owner and rule:deny_readonly"
              }, 
            "cinder-volume_extension:volume_tenant_attribute": {
              "key": "volume_extension:volume_tenant_attribute",
              "value": "rule:admin_or_owner"
              }, 
            "cinder-volume_extension:services:update": {
              "key": "volume_extension:services:update",
              "value": "rule:admin_api"
              }, 
            "cinder-volume_extension:snapshot_admin_actions:reset_status": {
              "key": "volume_extension:snapshot_admin_actions:reset_status",
              "value": "rule:admin_api and rule:deny_readonly"
              }, 
            "cinder-group:create_group_snapshot": {
              "key": "group:create_group_snapshot",
              "value": "rule:deny_readonly"
              }, 
            "cinder-volume_extension:volume_admin_actions:force_delete": {
              "key": "volume_extension:volume_admin_actions:force_delete",
              "value": "rule:admin_api and rule:deny_readonly"
              }, 
            "cinder-volume:update_readonly_flag": {
              "key": "volume:update_readonly_flag",
              "value": "rule:admin_or_owner and rule:deny_readonly"
              }, 
            "cinder-backup:backup-export": {
              "key": "backup:backup-export",
              "value": "rule:admin_api"
              }, 
            "cinder-group:group_types_manage": {
              "key": "group:group_types_manage",
              "value": "rule:admin_api"
              }, 
            "cinder-backup:backup-import": {
              "key": "backup:backup-import",
              "value": "rule:admin_api"
              }, 
            "cinder-backup:get_all": {
              "key": "backup:get_all",
              "value": "rule:admin_or_owner"
              }, 
            "cinder-group:delete": {
              "key": "group:delete",
              "value": "rule:admin_or_owner and rule:deny_readonly"
              }, 
            "cinder-volume_extension:types_manage": {
              "key": "volume_extension:types_manage",
              "value": "rule:admin_api"
              }, 
            "cinder-volume_extension:replication:reenable": {
              "key": "volume_extension:replication:reenable",
              "value": "rule:admin_api and rule:deny_readonly"
              }, 
            "cinder-deny_readonly": {
              "key": "deny_readonly",
              "value": "not role:readonly"
              }, 
            "cinder-group:get_all_group_snapshots": {
              "key": "group:get_all_group_snapshots",
              "value": "rule:admin_or_owner"
              }, 
            "cinder-volume:update_volume_metadata": {
              "key": "volume:update_volume_metadata",
              "value": "rule:admin_or_owner and rule:deny_readonly"
              }, 
            "cinder-volume:accept_transfer": {
              "key": "volume:accept_transfer",
              "value": "rule:deny_readonly"
              }, 
            "cinder-default": {
              "key": "default",
              "value": "rule:admin_or_owner"
              }, 
            "cinder-volume_extension:snapshot_admin_actions:force_delete": {
              "key": "volume_extension:snapshot_admin_actions:force_delete",
              "value": "rule:admin_api and rule:deny_readonly"
              }, 
            "cinder-volume_extension:volume_mig_status_attribute": {
              "key": "volume_extension:volume_mig_status_attribute",
              "value": "rule:admin_api"
              }, 
            "cinder-admin_api": {
              "key": "admin_api",
              "value": "is_admin:True"
              }, 
            "cinder-consistencygroup:get_all": {
              "key": "consistencygroup:get_all",
              "value": "group:nobody"
              }, 
            "cinder-volume_extension:quota_classes": {
              "key": "volume_extension:quota_classes",
              "value": "rule:admin_api"
              }, 
            "cinder-backup:create": {
              "key": "backup:create",
              "value": "rule:deny_readonly"
              }, 
            "cinder-volume:get_all": {
              "key": "volume:get_all",
              "value": "rule:admin_or_owner"
              }, 
            "cinder-snapshot_extension:snapshot_unmanage": {
              "key": "snapshot_extension:snapshot_unmanage",
              "value": "rule:admin_api and rule:deny_readonly"
              }, 
            "cinder-volume_extension:volume_image_metadata": {
              "key": "volume_extension:volume_image_metadata",
              "value": "rule:admin_or_owner"
              }, 
            "cinder-volume:update_snapshot_metadata": {
              "key": "volume:update_snapshot_metadata",
              "value": "rule:admin_or_owner and rule:deny_readonly"
              }, 
            "cinder-volume_extension:volume_type_access:removeProjectAccess": {
              "key": "volume_extension:volume_type_access:removeProjectAccess",
              "value": "rule:admin_api and rule:deny_readonly"
              }, 
            "cinder-group:create": {
              "key": "group:create",
              "value": "rule:deny_readonly"
              }, 
            "cinder-volume:extend": {
              "key": "volume:extend",
              "value": "rule:admin_or_owner and rule:deny_readonly"
              }, 
            "cinder-volume:get_snapshot_metadata": {
              "key": "volume:get_snapshot_metadata",
              "value": "rule:admin_or_owner"
              }, 
            "cinder-volume_extension:volume_admin_actions:migrate_volume_completion": {
              "key": "volume_extension:volume_admin_actions:migrate_volume_completion",
              "value": "rule:admin_api and rule:deny_readonly"
              }, 
            "cinder-consistencygroup:create": {
              "key": "consistencygroup:create",
              "value": "group:nobody and rule:deny_readonly"
              }, 
            "cinder-volume:get_transfer": {
              "key": "volume:get_transfer",
              "value": "rule:admin_or_owner and rule:deny_readonly"
              }, 
            "cinder-group:get": {
              "key": "group:get",
              "value": "rule:admin_or_owner"
              }, 
            "cinder-group:update": {
              "key": "group:update",
              "value": "rule:admin_or_owner and rule:deny_readonly"
              }, 
            "cinder-volume_extension:volume_manage": {
              "key": "volume_extension:volume_manage",
              "value": "rule:admin_api and rule:deny_readonly"
              }, 
            "cinder-volume:get_snapshot": {
              "key": "volume:get_snapshot",
              "value": "rule:admin_or_owner"
              }, 
            "cinder-volume:create": {
              "key": "volume:create",
              "value": "rule:deny_readonly"
              }, 
            "cinder-volume:update_snapshot": {
              "key": "volume:update_snapshot",
              "value": "rule:admin_or_owner and rule:deny_readonly"
              }, 
            "cinder-volume_extension:quotas:show": {
              "key": "volume_extension:quotas:show",
              "value": ""
              }, 
            "cinder-volume_extension:hosts": {
              "key": "volume_extension:hosts",
              "value": "rule:admin_api"
              }, 
            "cinder-group:update_group_snapshot": {
              "key": "group:update_group_snapshot",
              "value": "rule:admin_or_owner and rule:deny_readonly"
              }, 
            "cinder-clusters:get": {
              "key": "clusters:get",
              "value": "rule:admin_api"
              }, 
            "cinder-volume:get_all_snapshots": {
              "key": "volume:get_all_snapshots",
              "value": "rule:admin_or_owner"
              }, 
            "cinder-group:get_group_snapshot": {
              "key": "group:get_group_snapshot",
              "value": "rule:admin_or_owner"
              }, 
            "cinder-volume:get_all_transfers": {
              "key": "volume:get_all_transfers",
              "value": "rule:admin_or_owner and rule:deny_readonly"
              }, 
            "cinder-consistencygroup:get": {
              "key": "consistencygroup:get",
              "value": "group:nobody"
              }, 
            "cinder-consistencygroup:create_cgsnapshot": {
              "key": "consistencygroup:create_cgsnapshot",
              "value": "group:nobody and rule:deny_readonly"
              }, 
            "cinder-volume_extension:types_extra_specs": {
              "key": "volume_extension:types_extra_specs",
              "value": "rule:admin_api"
              }, 
            "cinder-volume:get": {
              "key": "volume:get",
              "value": "rule:admin_or_owner"
              }, 
            "cinder-volume:get_volume_metadata": {
              "key": "volume:get_volume_metadata",
              "value": "rule:admin_or_owner"
              }, 
            "cinder-volume_extension:backup_admin_actions:force_delete": {
              "key": "volume_extension:backup_admin_actions:force_delete",
              "value": "rule:admin_api and rule:deny_readonly"
              }, 
            "cinder-consistencygroup:update": {
              "key": "consistencygroup:update",
              "value": "group:nobody and rule:deny_readonly"
              }, 
            "cinder-group:access_group_types_specs": {
              "key": "group:access_group_types_specs",
              "value": "rule:admin_api"
              }, 
            "cinder-volume_extension:volume_unmanage": {
              "key": "volume_extension:volume_unmanage",
              "value": "rule:admin_api and rule:deny_readonly"
              }, 
            "cinder-volume_extension:replication:promote": {
              "key": "volume_extension:replication:promote",
              "value": "rule:admin_api and rule:deny_readonly"
              }, 
            "cinder-volume_extension:backup_admin_actions:reset_status": {
              "key": "volume_extension:backup_admin_actions:reset_status",
              "value": "rule:admin_api and rule:deny_readonly"
              }, 
            "cinder-group:get_all": {
              "key": "group:get_all",
              "value": "rule:admin_or_owner"
              }, 
            "cinder-group:group_type_access": {
              "key": "group:group_type_access",
              "value": "rule:admin_or_owner"
              }, 
            "cinder-volume:update_volume_admin_metadata": {
              "key": "volume:update_volume_admin_metadata",
              "value": "rule:admin_api and rule:deny_readonly"
              }, 
            "cinder-clusters:update": {
              "key": "clusters:update",
              "value": "rule:admin_api and rule:deny_readonly"
              }, 
            "cinder-admin_or_owner": {
              "key": "admin_or_owner",
              "value": "is_admin:True or project_id:%(project_id)s"
              }, 
            "cinder-volume_extension:volume_admin_actions:reset_status": {
              "key": "volume_extension:volume_admin_actions:reset_status",
              "value": "rule:admin_api and rule:deny_readonly"
              }, 
            "cinder-volume_extension:volume_actions:upload_image": {
              "key": "volume_extension:volume_actions:upload_image",
              "value": "rule:admin_or_owner and rule:deny_readonly"
              }, 
            "cinder-volume_extension:volume_actions:upload_public": {
              "key": "volume_extension:volume_actions:upload_public",
              "value": "rule:admin_api and rule:deny_readonly"
              }, 
            "cinder-volume_extension:list_manageable": {
              "key": "volume_extension:list_manageable",
              "value": "rule:admin_api"
              }, 
            "cinder-volume_extension:extended_snapshot_attributes": {
              "key": "volume_extension:extended_snapshot_attributes",
              "value": "rule:admin_or_owner"
              }, 
            "cinder-volume:delete_transfer": {
              "key": "volume:delete_transfer",
              "value": "rule:admin_or_owner and rule:deny_readonly"
              }, 
            "cinder-volume:create_snapshot": {
              "key": "volume:create_snapshot",
              "value": "rule:admin_or_owner and rule:deny_readonly"
              }, 
            "cinder-snapshot_extension:list_manageable": {
              "key": "snapshot_extension:list_manageable",
              "value": "rule:admin_api"
              }, 
            "cinder-volume_extension:quotas:delete": {
              "key": "volume_extension:quotas:delete",
              "value": "rule:admin_api and rule:deny_readonly"
              }, 
            "cinder-consistencygroup:delete": {
              "key": "consistencygroup:delete",
              "value": "group:nobody and rule:deny_readonly"
              }, 
            "cinder-consistencygroup:delete_cgsnapshot": {
              "key": "consistencygroup:delete_cgsnapshot",
              "value": "group:nobody and rule:deny_readonly"
              }, 
            "cinder-volume_extension:volume_host_attribute": {
              "key": "volume_extension:volume_host_attribute",
              "value": "rule:admin_api"
              }, 
            "cinder-volume:delete_volume_metadata": {
              "key": "volume:delete_volume_metadata",
              "value": "rule:admin_or_owner and rule:deny_readonly"
              }, 
            "cinder-backup:get": {
              "key": "backup:get",
              "value": "rule:admin_or_owner"
              }, 
            "cinder-group:group_types_specs": {
              "key": "group:group_types_specs",
              "value": "rule:admin_api"
              }, 
            "cinder-volume:create_transfer": {
              "key": "volume:create_transfer",
              "value": "rule:admin_or_owner and rule:deny_readonly"
              }, 
            "cinder-volume:retype": {
              "key": "volume:retype",
              "value": "rule:admin_or_owner and rule:deny_readonly"
              }, 
            "cinder-clusters:get_all": {
              "key": "clusters:get_all",
              "value": "rule:admin_api"
              }, 
            "cinder-volume_extension:quota_classes:validate_setup_for_nested_quota_use": {
              "key": "volume_extension:quota_classes:validate_setup_for_nested_quota_use",
              "value": "rule:admin_api and rule:deny_readonly"
              }, 
            "cinder-backup:update": {
              "key": "backup:update",
              "value": "rule:admin_or_owner and rule:deny_readonly"
              }, 
            "cinder-volume:delete_snapshot": {
              "key": "volume:delete_snapshot",
              "value": "rule:admin_or_owner and rule:deny_readonly"
              }, 
            "cinder-snapshot_extension:snapshot_manage": {
              "key": "snapshot_extension:snapshot_manage",
              "value": "rule:admin_api and rule:deny_readonly"
              }, 
            "cinder-volume_extension:volume_admin_actions:migrate_volume": {
              "key": "volume_extension:volume_admin_actions:migrate_volume",
              "value": "rule:admin_api and rule:deny_readonly"
              }, 
            "cinder-volume_extension:services:index": {
              "key": "volume_extension:services:index",
              "value": "rule:admin_api"
              }, 
            "cinder-volume:delete": {
              "key": "volume:delete",
              "value": "rule:admin_or_owner and rule:deny_readonly"
              }, 
            "cinder-volume_extension:access_types_extra_specs": {
              "key": "volume_extension:access_types_extra_specs",
              "value": "rule:admin_api"
              }, 
            "cinder-volume_extension:volume_type_encryption": {
              "key": "volume_extension:volume_type_encryption",
              "value": "rule:admin_api"
              }, 
            "cinder-consistencygroup:get_all_cgsnapshots": {
              "key": "consistencygroup:get_all_cgsnapshots",
              "value": "group:nobody"
              }, 
            "cinder-volume:freeze_host": {
              "key": "volume:freeze_host",
              "value": "rule:admin_api and rule:deny_readonly"
              }, 
            "cinder-message:delete": {
              "key": "message:delete",
              "value": "rule:admin_or_owner and rule:deny_readonly"
              }, 
            "cinder-message:get_all": {
              "key": "message:get_all",
              "value": "rule:admin_or_owner"
              }, 
            "cinder-volume_extension:access_types_qos_specs_id": {
              "key": "volume_extension:access_types_qos_specs_id",
              "value": "rule:admin_api"
              }, 
            "cinder-volume:update": {
              "key": "volume:update",
              "value": "rule:admin_or_owner and rule:deny_readonly"
              }, 
            "cinder-consistencygroup:get_cgsnapshot": {
              "key": "consistencygroup:get_cgsnapshot",
              "value": "group:nobody"
              }, 
            "cinder-group:delete_group_snapshot": {
              "key": "group:delete_group_snapshot",
              "value": "rule:admin_or_owner and rule:deny_readonly"
              }, 
            "cinder-volume:get_volume_admin_metadata": {
              "key": "volume:get_volume_admin_metadata",
              "value": "rule:admin_api"
              }, 
            "cinder-volume_extension:volume_type_access:addProjectAccess": {
              "key": "volume_extension:volume_type_access:addProjectAccess",
              "value": "rule:admin_api and rule:deny_readonly"
              }, 
            "cinder-volume:thaw_host": {
              "key": "volume:thaw_host",
              "value": "rule:admin_api and rule:deny_readonly"
              }
        }
        glance::policy::policies: { 
            "glance-get_task": {
              "key": "get_task",
              "value": "role:admin"
              }, 
            "glance-get_metadef_tag": {
              "key": "get_metadef_tag",
              "value": ""
              }, 
            "glance-add_metadef_resource_type_association": {
              "key": "add_metadef_resource_type_association",
              "value": "rule:deny_readonly"
              }, 
            "glance-modify_metadef_namespace": {
              "key": "modify_metadef_namespace",
              "value": "rule:deny_readonly"
              }, 
            "glance-get_metadef_properties": {
              "key": "get_metadef_properties",
              "value": ""
              }, 
            "glance-get_metadef_object": {
              "key": "get_metadef_object",
              "value": ""
              }, 
            "glance-get_image_location": {
              "key": "get_image_location",
              "value": ""
              }, 
            "glance-list_metadef_resource_types": {
              "key": "list_metadef_resource_types",
              "value": ""
              }, 
            "glance-add_image": {
              "key": "add_image",
              "value": "rule:deny_readonly"
              }, 
            "glance-get_metadef_namespace": {
              "key": "get_metadef_namespace",
              "value": ""
              }, 
            "glance-modify_image": {
              "key": "modify_image",
              "value": "rule:deny_readonly"
              }, 
            "glance-manage_image_cache": {
              "key": "manage_image_cache",
              "value": "role:admin"
              }, 
            "glance-delete_member": {
              "key": "delete_member",
              "value": "rule:deny_readonly"
              }, 
            "glance-deactivate": {
              "key": "deactivate",
              "value": "rule:deny_readonly"
              }, 
            "glance-add_metadef_property": {
              "key": "add_metadef_property",
              "value": "rule:deny_readonly"
              }, 
            "glance-modify_metadef_tag": {
              "key": "modify_metadef_tag",
              "value": "rule:deny_readonly"
              }, 
            "glance-get_member": {
              "key": "get_member",
              "value": ""
              }, 
            "glance-get_metadef_resource_type": {
              "key": "get_metadef_resource_type",
              "value": ""
              }, 
            "glance-delete_image": {
              "key": "delete_image",
              "value": "rule:deny_readonly"
              }, 
            "glance-get_metadef_namespaces": {
              "key": "get_metadef_namespaces",
              "value": ""
              }, 
            "glance-get_metadef_objects": {
              "key": "get_metadef_objects",
              "value": ""
              }, 
            "glance-modify_metadef_property": {
              "key": "modify_metadef_property",
              "value": "rule:deny_readonly"
              }, 
            "glance-publicize_image": {
              "key": "publicize_image",
              "value": "role:admin"
              }, 
            "glance-add_metadef_namespace": {
              "key": "add_metadef_namespace",
              "value": "rule:deny_readonly"
              }, 
            "glance-get_images": {
              "key": "get_images",
              "value": ""
              }, 
            "glance-add_member": {
              "key": "add_member",
              "value": "rule:deny_readonly"
              }, 
            "glance-set_image_location": {
              "key": "set_image_location",
              "value": "rule:deny_readonly"
              }, 
            "glance-add_task": {
              "key": "add_task",
              "value": "role:admin and rule:deny_readonly"
              }, 
            "glance-modify_member": {
              "key": "modify_member",
              "value": "rule:deny_readonly"
              }, 
            "glance-context_is_admin": {
              "key": "context_is_admin",
              "value": "role:admin and rule:deny_readonly"
              }, 
            "glance-upload_image": {
              "key": "upload_image",
              "value": "rule:deny_readonly"
              }, 
            "glance-deny_readonly": {
              "key": "deny_readonly",
              "value": "not role:readonly"
              }, 
            "glance-add_metadef_object": {
              "key": "add_metadef_object",
              "value": "rule:deny_readonly"
              }, 
            "glance-modify_task": {
              "key": "modify_task",
              "value": "role:admin and rule:deny_readonly"
              }, 
            "glance-get_members": {
              "key": "get_members",
              "value": ""
              }, 
            "glance-get_tasks": {
              "key": "get_tasks",
              "value": "role:admin"
              }, 
            "glance-get_image": {
              "key": "get_image",
              "value": ""
              }, 
            "glance-reactivate": {
              "key": "reactivate",
              "value": "rule:deny_readonly"
              }, 
            "glance-default": {
              "key": "default",
              "value": "role:admin"
              }, 
            "glance-get_metadef_property": {
              "key": "get_metadef_property",
              "value": ""
              }, 
            "glance-delete_image_location": {
              "key": "delete_image_location",
              "value": "rule:deny_readonly"
              }, 
            "glance-copy_from": {
              "key": "copy_from",
              "value": "rule:deny_readonly"
              }, 
            "glance-add_metadef_tags": {
              "key": "add_metadef_tags",
              "value": "rule:deny_readonly"
              }, 
            "glance-download_image": {
              "key": "download_image",
              "value": "rule:deny_readonly"
              }, 
            "glance-modify_metadef_object": {
              "key": "modify_metadef_object",
              "value": "rule:deny_readonly"
              }, 
            "glance-add_metadef_tag": {
              "key": "add_metadef_tag",
              "value": "rule:deny_readonly"
              }, 
            "glance-get_metadef_tags": {
              "key": "get_metadef_tags",
              "value": ""
              }
        }
        gnocchi::policy::policies: { 
            "gnocchi-list resource type": {
              "key": "list resource type",
              "value": ""
              }, 
            "gnocchi-delete resource type": {
              "key": "delete resource type",
              "value": "role:admin"
              }, 
            "gnocchi-create resource": {
              "key": "create resource",
              "value": "rule:deny_readonly"
              }, 
            "gnocchi-update resource type": {
              "key": "update resource type",
              "value": "role:admin"
              }, 
            "gnocchi-delete archive policy rule": {
              "key": "delete archive policy rule",
              "value": "role:admin"
              }, 
            "gnocchi-create archive policy rule": {
              "key": "create archive policy rule",
              "value": "role:admin"
              }, 
            "gnocchi-update resource": {
              "key": "update resource",
              "value": "rule:admin_or_creator"
              }, 
            "gnocchi-admin_or_creator": {
              "key": "admin_or_creator",
              "value": "role:admin or project_id:%(created_by_project_id)s"
              }, 
            "gnocchi-get status": {
              "key": "get status",
              "value": "role:admin"
              }, 
            "gnocchi-get resource type": {
              "key": "get resource type",
              "value": ""
              }, 
            "gnocchi-metric_owner": {
              "key": "metric_owner",
              "value": "project_id:%(resource.project_id)s"
              }, 
            "gnocchi-delete archive policy": {
              "key": "delete archive policy",
              "value": "role:admin"
              }, 
            "gnocchi-get archive policy": {
              "key": "get archive policy",
              "value": ""
              }, 
            "gnocchi-delete resources": {
              "key": "delete resources",
              "value": "rule:admin_or_creator"
              }, 
            "gnocchi-get resource": {
              "key": "get resource",
              "value": "rule:admin_or_creator or rule:resource_owner"
              }, 
            "gnocchi-post measures": {
              "key": "post measures",
              "value": "rule:admin_or_creator"
              }, 
            "gnocchi-get archive policy rule": {
              "key": "get archive policy rule",
              "value": ""
              }, 
            "gnocchi-resource_owner": {
              "key": "resource_owner",
              "value": "project_id:%(project_id)s"
              }, 
            "gnocchi-create resource type": {
              "key": "create resource type",
              "value": "role:admin"
              }, 
            "gnocchi-search metric": {
              "key": "search metric",
              "value": "rule:admin_or_creator or rule:metric_owner"
              }, 
            "gnocchi-delete resource": {
              "key": "delete resource",
              "value": "rule:admin_or_creator"
              }, 
            "gnocchi-search resource": {
              "key": "search resource",
              "value": "rule:admin_or_creator or rule:resource_owner"
              }, 
            "gnocchi-list resource": {
              "key": "list resource",
              "value": "rule:admin_or_creator or rule:resource_owner"
              }, 
            "gnocchi-deny_readonly": {
              "key": "deny_readonly",
              "value": "not role:readonly"
              }, 
            "gnocchi-list metric": {
              "key": "list metric",
              "value": ""
              }, 
            "gnocchi-list archive policy": {
              "key": "list archive policy",
              "value": ""
              }, 
            "gnocchi-delete metric": {
              "key": "delete metric",
              "value": "rule:admin_or_creator"
              }, 
            "gnocchi-update archive policy": {
              "key": "update archive policy",
              "value": "role:admin"
              }, 
            "gnocchi-create archive policy": {
              "key": "create archive policy",
              "value": "role:admin"
              }, 
            "gnocchi-get measures": {
              "key": "get measures",
              "value": "rule:admin_or_creator or rule:metric_owner or role:readonly"
              }, 
            "gnocchi-create metric": {
              "key": "create metric",
              "value": "rule:deny_readonly"
              }, 
            "gnocchi-list all metric": {
              "key": "list all metric",
              "value": "role:admin or role:readonly"
              }, 
            "gnocchi-get metric": {
              "key": "get metric",
              "value": "rule:admin_or_creator or rule:metric_owner or role:readonly"
              }, 
            "gnocchi-list archive policy rule": {
              "key": "list archive policy rule",
              "value": ""
              }
        }
        heat::policy::policies: { 
            "heat-stacks:resource_schema": {
              "key": "stacks:resource_schema",
              "value": "rule:deny_stack_user"
              }, 
            "heat-stacks:list_resource_types": {
              "key": "stacks:list_resource_types",
              "value": "rule:deny_stack_user"
              }, 
            "heat-resource_types:OS::Nova::HostAggregate": {
              "key": "resource_types:OS::Nova::HostAggregate",
              "value": "rule:project_admin"
              }, 
            "heat-cloudwatch:ListMetrics": {
              "key": "cloudwatch:ListMetrics",
              "value": "rule:deny_stack_user"
              }, 
            "heat-stacks:validate_template": {
              "key": "stacks:validate_template",
              "value": "rule:deny_stack_user"
              }, 
            "heat-software_configs:create": {
              "key": "software_configs:create",
              "value": "rule:deny_stack_user and rule:deny_readonly"
              }, 
            "heat-software_deployments:update": {
              "key": "software_deployments:update",
              "value": "rule:deny_stack_user and rule:deny_readonly"
              }, 
            "heat-cloudformation:EstimateTemplateCost": {
              "key": "cloudformation:EstimateTemplateCost",
              "value": "rule:deny_stack_user"
              }, 
            "heat-software_deployments:metadata": {
              "key": "software_deployments:metadata",
              "value": ""
              }, 
            "heat-stacks:generate_template": {
              "key": "stacks:generate_template",
              "value": "rule:deny_stack_user"
              }, 
            "heat-stacks:list_snapshots": {
              "key": "stacks:list_snapshots",
              "value": "rule:deny_stack_user"
              }, 
            "heat-cloudformation:ListStackResources": {
              "key": "cloudformation:ListStackResources",
              "value": "rule:deny_stack_user"
              }, 
            "heat-cloudwatch:DescribeAlarmHistory": {
              "key": "cloudwatch:DescribeAlarmHistory",
              "value": "rule:deny_stack_user"
              }, 
            "heat-resource_types:OS::Cinder::VolumeType": {
              "key": "resource_types:OS::Cinder::VolumeType",
              "value": "rule:project_admin"
              }, 
            "heat-software_configs:show": {
              "key": "software_configs:show",
              "value": "rule:deny_stack_user"
              }, 
            "heat-stacks:index": {
              "key": "stacks:index",
              "value": "rule:deny_stack_user"
              }, 
            "heat-cloudformation:CancelUpdateStack": {
              "key": "cloudformation:CancelUpdateStack",
              "value": "rule:deny_stack_user and rule:deny_readonly"
              }, 
            "heat-stacks:create": {
              "key": "stacks:create",
              "value": "rule:deny_stack_user and rule:deny_readonly"
              }, 
            "heat-context_is_admin": {
              "key": "context_is_admin",
              "value": "role:admin and rule:deny_readonly"
              }, 
            "heat-deny_readonly": {
              "key": "deny_readonly",
              "value": "not role:readonly"
              }, 
            "heat-stacks:lookup": {
              "key": "stacks:lookup",
              "value": ""
              }, 
            "heat-resource:signal": {
              "key": "resource:signal",
              "value": ""
              }, 
            "heat-stacks:preview": {
              "key": "stacks:preview",
              "value": "rule:deny_stack_user"
              }, 
            "heat-resource_types:OS::Cinder::EncryptedVolumeType": {
              "key": "resource_types:OS::Cinder::EncryptedVolumeType",
              "value": "rule:project_admin"
              }, 
            "heat-cloudformation:UpdateStack": {
              "key": "cloudformation:UpdateStack",
              "value": "rule:deny_stack_user and rule:deny_readonly"
              }, 
            "heat-cloudformation:DeleteStack": {
              "key": "cloudformation:DeleteStack",
              "value": "rule:deny_stack_user and rule:deny_readonly"
              }, 
            "heat-cloudwatch:EnableAlarmActions": {
              "key": "cloudwatch:EnableAlarmActions",
              "value": "rule:deny_stack_user and rule:deny_readonly"
              }, 
            "heat-cloudwatch:DisableAlarmActions": {
              "key": "cloudwatch:DisableAlarmActions",
              "value": "rule:deny_stack_user and rule:deny_readonly"
              }, 
            "heat-software_configs:delete": {
              "key": "software_configs:delete",
              "value": "rule:deny_stack_user and rule:deny_readonly"
              }, 
            "heat-resource_types:OS::Neutron::QoSPolicy": {
              "key": "resource_types:OS::Neutron::QoSPolicy",
              "value": "rule:project_admin"
              }, 
            "heat-cloudformation:DescribeStackResources": {
              "key": "cloudformation:DescribeStackResources",
              "value": "rule:deny_stack_user"
              }, 
            "heat-software_deployments:index": {
              "key": "software_deployments:index",
              "value": "rule:deny_stack_user"
              }, 
            "heat-cloudformation:DescribeStackResource": {
              "key": "cloudformation:DescribeStackResource",
              "value": ""
              }, 
            "heat-stacks:delete_snapshot": {
              "key": "stacks:delete_snapshot",
              "value": "rule:deny_stack_user and rule:deny_readonly"
              }, 
            "heat-resource:metadata": {
              "key": "resource:metadata",
              "value": ""
              }, 
            "heat-software_deployments:show": {
              "key": "software_deployments:show",
              "value": "rule:deny_stack_user"
              }, 
            "heat-cloudformation:GetTemplate": {
              "key": "cloudformation:GetTemplate",
              "value": "rule:deny_stack_user"
              }, 
            "heat-stacks:preview_update": {
              "key": "stacks:preview_update",
              "value": "rule:deny_stack_user and rule:deny_readonly"
              }, 
            "heat-resource_types:OS::Neutron::QoSBandwidthLimitRule": {
              "key": "resource_types:OS::Neutron::QoSBandwidthLimitRule",
              "value": "rule:project_admin"
              }, 
            "heat-resource:show": {
              "key": "resource:show",
              "value": "rule:deny_stack_user"
              }, 
            "heat-software_deployments:create": {
              "key": "software_deployments:create",
              "value": "rule:deny_stack_user and rule:deny_readonly"
              }, 
            "heat-stacks:export": {
              "key": "stacks:export",
              "value": "rule:deny_stack_user"
              }, 
            "heat-cloudformation:ValidateTemplate": {
              "key": "cloudformation:ValidateTemplate",
              "value": "rule:deny_stack_user"
              }, 
            "heat-stacks:show": {
              "key": "stacks:show",
              "value": "rule:deny_stack_user"
              }, 
            "heat-stacks:snapshot": {
              "key": "stacks:snapshot",
              "value": "rule:deny_stack_user"
              }, 
            "heat-resource_types:OS::Cinder::Quota": {
              "key": "resource_types:OS::Cinder::Quota",
              "value": "rule:project_admin"
              }, 
            "heat-stacks:update": {
              "key": "stacks:update",
              "value": "rule:deny_stack_user and rule:deny_readonly"
              }, 
            "heat-resource_types:OS::Manila::ShareType": {
              "key": "resource_types:OS::Manila::ShareType",
              "value": "rule:project_admin"
              }, 
            "heat-stacks:show_output": {
              "key": "stacks:show_output",
              "value": "rule:deny_stack_user"
              }, 
            "heat-stacks:update_patch": {
              "key": "stacks:update_patch",
              "value": "rule:deny_stack_user and rule:deny_readonly"
              }, 
            "heat-stacks:list_template_functions": {
              "key": "stacks:list_template_functions",
              "value": "rule:deny_stack_user"
              }, 
            "heat-cloudformation:DescribeStackEvents": {
              "key": "cloudformation:DescribeStackEvents",
              "value": "rule:deny_stack_user"
              }, 
            "heat-events:show": {
              "key": "events:show",
              "value": "rule:deny_stack_user"
              }, 
            "heat-actions:action": {
              "key": "actions:action",
              "value": "rule:deny_stack_user"
              }, 
            "heat-stacks:environment": {
              "key": "stacks:environment",
              "value": "rule:deny_stack_user"
              }, 
            "heat-cloudwatch:PutMetricAlarm": {
              "key": "cloudwatch:PutMetricAlarm",
              "value": "rule:deny_stack_user"
              }, 
            "heat-software_deployments:delete": {
              "key": "software_deployments:delete",
              "value": "rule:deny_stack_user and rule:deny_readonly"
              }, 
            "heat-stacks:show_snapshot": {
              "key": "stacks:show_snapshot",
              "value": "rule:deny_stack_user"
              }, 
            "heat-cloudformation:DescribeStacks": {
              "key": "cloudformation:DescribeStacks",
              "value": "rule:deny_stack_user"
              }, 
            "heat-cloudwatch:SetAlarmState": {
              "key": "cloudwatch:SetAlarmState",
              "value": "rule:deny_stack_user and rule:deny_readonly"
              }, 
            "heat-resource:index": {
              "key": "resource:index",
              "value": "rule:deny_stack_user"
              }, 
            "heat-resource:mark_unhealthy": {
              "key": "resource:mark_unhealthy",
              "value": "rule:deny_stack_user"
              }, 
            "heat-cloudwatch:DescribeAlarms": {
              "key": "cloudwatch:DescribeAlarms",
              "value": "rule:deny_stack_user"
              }, 
            "heat-stacks:template": {
              "key": "stacks:template",
              "value": "rule:deny_stack_user"
              }, 
            "heat-cloudwatch:DeleteAlarms": {
              "key": "cloudwatch:DeleteAlarms",
              "value": "rule:deny_stack_user and rule:deny_readonly"
              }, 
            "heat-resource_types:OS::Nova::Flavor": {
              "key": "resource_types:OS::Nova::Flavor",
              "value": "rule:project_admin"
              }, 
            "heat-cloudformation:ListStacks": {
              "key": "cloudformation:ListStacks",
              "value": "rule:deny_stack_user"
              }, 
            "heat-resource_types:OS::Cinder::QoSSpecs": {
              "key": "resource_types:OS::Cinder::QoSSpecs",
              "value": "rule:project_admin"
              }, 
            "heat-stacks:restore_snapshot": {
              "key": "stacks:restore_snapshot",
              "value": "rule:deny_stack_user and rule:deny_readonly"
              }, 
            "heat-stacks:abandon": {
              "key": "stacks:abandon",
              "value": "rule:deny_stack_user and rule:deny_readonly"
              }, 
            "heat-events:index": {
              "key": "events:index",
              "value": "rule:deny_stack_user"
              }, 
            "heat-deny_everybody": {
              "key": "deny_everybody",
              "value": "!"
              }, 
            "heat-software_configs:global_index": {
              "key": "software_configs:global_index",
              "value": "rule:deny_everybody"
              }, 
            "heat-stacks:detail": {
              "key": "stacks:detail",
              "value": "rule:deny_stack_user"
              }, 
            "heat-stacks:preview_update_patch": {
              "key": "stacks:preview_update_patch",
              "value": "rule:deny_stack_user and rule:deny_readonly"
              }, 
            "heat-deny_stack_user": {
              "key": "deny_stack_user",
              "value": "not role:heat_stack_user"
              }, 
            "heat-project_admin": {
              "key": "project_admin",
              "value": "role:admin"
              }, 
            "heat-stacks:global_index": {
              "key": "stacks:global_index",
              "value": "rule:deny_everybody"
              }, 
            "heat-service:index": {
              "key": "service:index",
              "value": "rule:context_is_admin"
              }, 
            "heat-stacks:delete": {
              "key": "stacks:delete",
              "value": "rule:deny_stack_user and rule:deny_readonly"
              }, 
            "heat-cloudformation:CreateStack": {
              "key": "cloudformation:CreateStack",
              "value": "rule:deny_stack_user and rule:deny_readonly"
              }, 
            "heat-cloudwatch:PutMetricData": {
              "key": "cloudwatch:PutMetricData",
              "value": ""
              }, 
            "heat-software_configs:index": {
              "key": "software_configs:index",
              "value": "rule:deny_stack_user"
              }, 
            "heat-cloudwatch:GetMetricStatistics": {
              "key": "cloudwatch:GetMetricStatistics",
              "value": "rule:deny_stack_user"
              }, 
            "heat-stacks:files": {
              "key": "stacks:files",
              "value": "rule:deny_stack_user"
              }, 
            "heat-stacks:list_template_versions": {
              "key": "stacks:list_template_versions",
              "value": "rule:deny_stack_user"
              }, 
            "heat-cloudwatch:DescribeAlarmsForMetric": {
              "key": "cloudwatch:DescribeAlarmsForMetric",
              "value": "rule:deny_stack_user"
              }, 
            "heat-build_info:build_info": {
              "key": "build_info:build_info",
              "value": "rule:deny_stack_user"
              }, 
            "heat-stacks:list_outputs": {
              "key": "stacks:list_outputs",
              "value": "rule:deny_stack_user"
              }
        }
        ironic::policy::policies: { 
            "ironic-admin_api": {
              "key": "admin_api",
              "value": "role:admin or role:administrator"
              }, 
            "ironic-baremetal:node:set_boot_device": {
              "key": "baremetal:node:set_boot_device",
              "value": "rule:is_admin and rule:deny_readonly"
              }, 
            "ironic-baremetal:driver:get_raid_logical_disk_properties": {
              "key": "baremetal:driver:get_raid_logical_disk_properties",
              "value": "rule:is_admin or rule:is_observer"
              }, 
            "ironic-is_member": {
              "key": "is_member",
              "value": "tenant:demo or tenant:baremetal"
              }, 
            "ironic-baremetal:node:set_console_state": {
              "key": "baremetal:node:set_console_state",
              "value": "rule:is_admin and rule:deny_readonly"
              }, 
            "ironic-baremetal:driver:vendor_passthru": {
              "key": "baremetal:driver:vendor_passthru",
              "value": "rule:is_admin"
              }, 
            "ironic-baremetal:node:ipa_heartbeat": {
              "key": "baremetal:node:ipa_heartbeat",
              "value": "rule:public_api"
              }, 
            "ironic-baremetal:node:update": {
              "key": "baremetal:node:update",
              "value": "rule:is_admin and rule:deny_readonly"
              }, 
            "ironic-baremetal:node:validate": {
              "key": "baremetal:node:validate",
              "value": "rule:is_admin"
              }, 
            "ironic-baremetal:node:set_provision_state": {
              "key": "baremetal:node:set_provision_state",
              "value": "rule:is_admin and rule:deny_readonly"
              }, 
            "ironic-baremetal:node:clear_maintenance": {
              "key": "baremetal:node:clear_maintenance",
              "value": "rule:is_admin and rule:deny_readonly"
              }, 
            "ironic-baremetal:port:update": {
              "key": "baremetal:port:update",
              "value": "rule:is_admin and rule:deny_readonly"
              }, 
            "ironic-baremetal:chassis:get": {
              "key": "baremetal:chassis:get",
              "value": "rule:is_admin or rule:is_observer"
              }, 
            "ironic-baremetal:driver:get": {
              "key": "baremetal:driver:get",
              "value": "rule:is_admin or rule:is_observer"
              }, 
            "ironic-baremetal:node:set_maintenance": {
              "key": "baremetal:node:set_maintenance",
              "value": "rule:is_admin and rule:deny_readonly"
              }, 
            "ironic-baremetal:node:set_power_state": {
              "key": "baremetal:node:set_power_state",
              "value": "rule:is_admin and rule:deny_readonly"
              }, 
            "ironic-baremetal:chassis:update": {
              "key": "baremetal:chassis:update",
              "value": "rule:is_admin and rule:deny_readonly"
              }, 
            "ironic-baremetal:node:get_states": {
              "key": "baremetal:node:get_states",
              "value": "rule:is_admin or rule:is_observer"
              }, 
            "ironic-baremetal:port:delete": {
              "key": "baremetal:port:delete",
              "value": "rule:is_admin and rule:deny_readonly"
              }, 
            "ironic-is_admin": {
              "key": "is_admin",
              "value": "rule:admin_api or (rule:is_member and role:baremetal_admin)"
              }, 
            "ironic-is_observer": {
              "key": "is_observer",
              "value": "rule:is_member and (role:observer or role:baremetal_observer)"
              }, 
            "ironic-baremetal:node:get_console": {
              "key": "baremetal:node:get_console",
              "value": "rule:is_admin"
              }, 
            "ironic-show_password": {
              "key": "show_password",
              "value": "!"
              }, 
            "ironic-deny_readonly": {
              "key": "deny_readonly",
              "value": "not role:readonly"
              }, 
            "ironic-baremetal:node:create": {
              "key": "baremetal:node:create",
              "value": "rule:is_admin and rule:deny_readonly"
              }, 
            "ironic-baremetal:driver:ipa_lookup": {
              "key": "baremetal:driver:ipa_lookup",
              "value": "rule:public_api"
              }, 
            "ironic-baremetal:node:get": {
              "key": "baremetal:node:get",
              "value": "rule:is_admin or rule:is_observer"
              }, 
            "ironic-baremetal:port:create": {
              "key": "baremetal:port:create",
              "value": "rule:is_admin and rule:deny_readonly"
              }, 
            "ironic-baremetal:port:get": {
              "key": "baremetal:port:get",
              "value": "rule:is_admin or rule:is_observer"
              }, 
            "ironic-baremetal:chassis:delete": {
              "key": "baremetal:chassis:delete",
              "value": "rule:is_admin and rule:deny_readonly"
              }, 
            "ironic-baremetal:driver:get_properties": {
              "key": "baremetal:driver:get_properties",
              "value": "rule:is_admin or rule:is_observer"
              }, 
            "ironic-baremetal:node:delete": {
              "key": "baremetal:node:delete",
              "value": "rule:is_admin and rule:deny_readonly"
              }, 
            "ironic-public_api": {
              "key": "public_api",
              "value": "is_public_api:True"
              }, 
            "ironic-baremetal:node:set_raid_state": {
              "key": "baremetal:node:set_raid_state",
              "value": "rule:is_admin and rule:deny_readonly"
              }, 
            "ironic-baremetal:chassis:create": {
              "key": "baremetal:chassis:create",
              "value": "rule:is_admin and rule:deny_readonly"
              }, 
            "ironic-baremetal:node:vendor_passthru": {
              "key": "baremetal:node:vendor_passthru",
              "value": "rule:is_admin"
              }, 
            "ironic-show_instance_secrets": {
              "key": "show_instance_secrets",
              "value": "!"
              }, 
            "ironic-baremetal:node:get_boot_device": {
              "key": "baremetal:node:get_boot_device",
              "value": "rule:is_admin or rule:is_observer"
              }
        }
        keystone::policy::policies: { 
            "keystone-identity:delete_project": {
              "key": "identity:delete_project",
              "value": "rule:admin_required"
              }, 
            "keystone-identity:delete_policy_association_for_service": {
              "key": "identity:delete_policy_association_for_service",
              "value": "rule:admin_required"
              }, 
            "keystone-identity:get_region": {
              "key": "identity:get_region",
              "value": ""
              }, 
            "keystone-identity:create_implied_role": {
              "key": "identity:create_implied_role",
              "value": "rule:admin_required"
              }, 
            "keystone-identity:list_endpoint_groups": {
              "key": "identity:list_endpoint_groups",
              "value": "rule:admin_required"
              }, 
            "keystone-identity:list_endpoints_associated_with_endpoint_group": {
              "key": "identity:list_endpoints_associated_with_endpoint_group",
              "value": "rule:admin_required"
              }, 
            "keystone-identity:get_auth_catalog": {
              "key": "identity:get_auth_catalog",
              "value": ""
              }, 
            "keystone-identity:list_access_tokens": {
              "key": "identity:list_access_tokens",
              "value": "rule:admin_required"
              }, 
            "keystone-identity:list_trusts": {
              "key": "identity:list_trusts",
              "value": ""
              }, 
            "keystone-identity:delete_implied_role": {
              "key": "identity:delete_implied_role",
              "value": "rule:admin_required"
              }, 
            "keystone-identity:get_domain_config_default": {
              "key": "identity:get_domain_config_default",
              "value": "rule:admin_required"
              }, 
            "keystone-identity:update_service": {
              "key": "identity:update_service",
              "value": "rule:admin_required"
              }, 
            "keystone-identity:create_domain_config": {
              "key": "identity:create_domain_config",
              "value": "rule:admin_required"
              }, 
            "keystone-identity:delete_service": {
              "key": "identity:delete_service",
              "value": "rule:admin_required"
              }, 
            "keystone-identity:update_mapping": {
              "key": "identity:update_mapping",
              "value": "rule:admin_required"
              }, 
            "keystone-identity:list_domains": {
              "key": "identity:list_domains",
              "value": "rule:admin_required"
              }, 
            "keystone-identity:list_policies": {
              "key": "identity:list_policies",
              "value": "rule:admin_required"
              }, 
            "keystone-identity:update_endpoint_group": {
              "key": "identity:update_endpoint_group",
              "value": "rule:admin_required"
              }, 
            "keystone-service_role": {
              "key": "service_role",
              "value": "role:service"
              }, 
            "keystone-identity:add_user_to_group": {
              "key": "identity:add_user_to_group",
              "value": "rule:admin_required"
              }, 
            "keystone-identity:create_policy_association_for_service": {
              "key": "identity:create_policy_association_for_service",
              "value": "rule:admin_required"
              }, 
            "keystone-identity:delete_endpoint_group": {
              "key": "identity:delete_endpoint_group",
              "value": "rule:admin_required"
              }, 
            "keystone-identity:get_endpoint_group_in_project": {
              "key": "identity:get_endpoint_group_in_project",
              "value": "rule:admin_required"
              }, 
            "keystone-identity:delete_identity_provider": {
              "key": "identity:delete_identity_provider",
              "value": "rule:admin_required"
              }, 
            "keystone-identity:create_domain_role": {
              "key": "identity:create_domain_role",
              "value": "rule:admin_required"
              }, 
            "keystone-deny_readonly": {
              "key": "deny_readonly",
              "value": "not role:readonly"
              }, 
            "keystone-identity:list_credentials": {
              "key": "identity:list_credentials",
              "value": "rule:admin_required"
              }, 
            "keystone-identity:create_protocol": {
              "key": "identity:create_protocol",
              "value": "rule:admin_required"
              }, 
            "keystone-identity:check_user_in_group": {
              "key": "identity:check_user_in_group",
              "value": "rule:admin_required"
              }, 
            "keystone-identity:delete_policy_association_for_region_and_service": {
              "key": "identity:delete_policy_association_for_region_and_service",
              "value": "rule:admin_required"
              }, 
            "keystone-identity:create_user": {
              "key": "identity:create_user",
              "value": "rule:admin_required"
              }, 
            "keystone-identity:get_policy_for_endpoint": {
              "key": "identity:get_policy_for_endpoint",
              "value": "rule:admin_required"
              }, 
            "keystone-identity:update_consumer": {
              "key": "identity:update_consumer",
              "value": "rule:admin_required"
              }, 
            "keystone-identity:create_grant": {
              "key": "identity:create_grant",
              "value": "rule:admin_required"
              }, 
            "keystone-identity:list_projects_associated_with_endpoint_group": {
              "key": "identity:list_projects_associated_with_endpoint_group",
              "value": "rule:admin_required"
              }, 
            "keystone-identity:list_groups": {
              "key": "identity:list_groups",
              "value": "rule:admin_required"
              }, 
            "keystone-identity:validate_token": {
              "key": "identity:validate_token",
              "value": "rule:service_admin_or_token_subject"
              }, 
            "keystone-identity:create_endpoint": {
              "key": "identity:create_endpoint",
              "value": "rule:admin_required"
              }, 
            "keystone-identity:check_token": {
              "key": "identity:check_token",
              "value": "rule:admin_or_token_subject"
              }, 
            "keystone-identity:ec2_create_credential": {
              "key": "identity:ec2_create_credential",
              "value": "rule:admin_or_owner"
              }, 
            "keystone-identity:ec2_get_credential": {
              "key": "identity:ec2_get_credential",
              "value": "rule:admin_required or (rule:owner and user_id:%(target.credential.user_id)s)"
              }, 
            "keystone-identity:revocation_list": {
              "key": "identity:revocation_list",
              "value": "rule:service_or_admin"
              }, 
            "keystone-identity:delete_domain_role": {
              "key": "identity:delete_domain_role",
              "value": "rule:admin_required"
              }, 
            "keystone-identity:delete_mapping": {
              "key": "identity:delete_mapping",
              "value": "rule:admin_required"
              }, 
            "keystone-identity:list_endpoints_for_policy": {
              "key": "identity:list_endpoints_for_policy",
              "value": "rule:admin_required"
              }, 
            "keystone-identity:update_service_provider": {
              "key": "identity:update_service_provider",
              "value": "rule:admin_required"
              }, 
            "keystone-identity:list_endpoint_groups_for_project": {
              "key": "identity:list_endpoint_groups_for_project",
              "value": "rule:admin_required"
              }, 
            "keystone-identity:ec2_delete_credential": {
              "key": "identity:ec2_delete_credential",
              "value": "rule:admin_required or (rule:owner and user_id:%(target.credential.user_id)s)"
              }, 
            "keystone-identity:get_user": {
              "key": "identity:get_user",
              "value": "rule:admin_or_owner"
              }, 
            "keystone-identity:delete_domain_config": {
              "key": "identity:delete_domain_config",
              "value": "rule:admin_required"
              }, 
            "keystone-identity:check_grant": {
              "key": "identity:check_grant",
              "value": "rule:admin_required"
              }, 
            "keystone-identity:update_domain": {
              "key": "identity:update_domain",
              "value": "rule:admin_required"
              }, 
            "keystone-identity:get_endpoint": {
              "key": "identity:get_endpoint",
              "value": "rule:admin_required"
              }, 
            "keystone-identity:get_access_token": {
              "key": "identity:get_access_token",
              "value": "rule:admin_required"
              }, 
            "keystone-identity:update_identity_provider": {
              "key": "identity:update_identity_provider",
              "value": "rule:admin_required"
              }, 
            "keystone-identity:authorize_request_token": {
              "key": "identity:authorize_request_token",
              "value": "rule:admin_required"
              }, 
            "keystone-identity:list_regions": {
              "key": "identity:list_regions",
              "value": ""
              }, 
            "keystone-identity:list_endpoints_for_project": {
              "key": "identity:list_endpoints_for_project",
              "value": "rule:admin_required"
              }, 
            "keystone-service_admin_or_token_subject": {
              "key": "service_admin_or_token_subject",
              "value": "rule:service_or_admin or rule:token_subject"
              }, 
            "keystone-identity:list_revoke_events": {
              "key": "identity:list_revoke_events",
              "value": ""
              }, 
            "keystone-identity:create_identity_provider": {
              "key": "identity:create_identity_provider",
              "value": "rule:admin_required"
              }, 
            "keystone-identity:delete_service_provider": {
              "key": "identity:delete_service_provider",
              "value": "rule:admin_required"
              }, 
            "keystone-identity:remove_endpoint_group_from_project": {
              "key": "identity:remove_endpoint_group_from_project",
              "value": "rule:admin_required"
              }, 
            "keystone-identity:delete_endpoint": {
              "key": "identity:delete_endpoint",
              "value": "rule:admin_required"
              }, 
            "keystone-identity:create_project": {
              "key": "identity:create_project",
              "value": "rule:admin_required"
              }, 
            "keystone-identity:list_identity_providers": {
              "key": "identity:list_identity_providers",
              "value": "rule:admin_required"
              }, 
            "keystone-identity:update_endpoint": {
              "key": "identity:update_endpoint",
              "value": "rule:admin_required"
              }, 
            "keystone-identity:create_trust": {
              "key": "identity:create_trust",
              "value": "user_id:%(trust.trustor_user_id)s"
              }, 
            "keystone-identity:check_implied_role": {
              "key": "identity:check_implied_role",
              "value": "rule:admin_required"
              }, 
            "keystone-identity:get_auth_projects": {
              "key": "identity:get_auth_projects",
              "value": ""
              }, 
            "keystone-identity:list_projects": {
              "key": "identity:list_projects",
              "value": "rule:admin_required"
              }, 
            "keystone-identity:list_projects_for_user": {
              "key": "identity:list_projects_for_user",
              "value": ""
              }, 
            "keystone-identity:list_services": {
              "key": "identity:list_services",
              "value": "rule:admin_required"
              }, 
            "keystone-identity:delete_trust": {
              "key": "identity:delete_trust",
              "value": "rule:deny_readonly"
              }, 
            "keystone-identity:update_protocol": {
              "key": "identity:update_protocol",
              "value": "rule:admin_required"
              }, 
            "keystone-identity:update_role": {
              "key": "identity:update_role",
              "value": "rule:admin_required"
              }, 
            "keystone-identity:get_identity_providers": {
              "key": "identity:get_identity_providers",
              "value": "rule:admin_required"
              }, 
            "keystone-identity:create_domain": {
              "key": "identity:create_domain",
              "value": "rule:admin_required"
              }, 
            "keystone-identity:create_service_provider": {
              "key": "identity:create_service_provider",
              "value": "rule:admin_required"
              }, 
            "keystone-identity:create_credential": {
              "key": "identity:create_credential",
              "value": "rule:admin_required"
              }, 
            "keystone-identity:list_domains_for_user": {
              "key": "identity:list_domains_for_user",
              "value": ""
              }, 
            "keystone-identity:delete_policy": {
              "key": "identity:delete_policy",
              "value": "rule:admin_required"
              }, 
            "keystone-identity:delete_role": {
              "key": "identity:delete_role",
              "value": "rule:admin_required"
              }, 
            "keystone-identity:create_role": {
              "key": "identity:create_role",
              "value": "rule:admin_required"
              }, 
            "keystone-identity:list_consumers": {
              "key": "identity:list_consumers",
              "value": "rule:admin_required"
              }, 
            "keystone-identity:get_role_for_trust": {
              "key": "identity:get_role_for_trust",
              "value": ""
              }, 
            "keystone-admin_or_token_subject": {
              "key": "admin_or_token_subject",
              "value": "rule:admin_required or rule:token_subject"
              }, 
            "keystone-identity:get_mapping": {
              "key": "identity:get_mapping",
              "value": "rule:admin_required"
              }, 
            "keystone-identity:create_group": {
              "key": "identity:create_group",
              "value": "rule:admin_required"
              }, 
            "keystone-identity:list_protocols": {
              "key": "identity:list_protocols",
              "value": "rule:admin_required"
              }, 
            "keystone-owner": {
              "key": "owner",
              "value": "user_id:%(user_id)s"
              }, 
            "keystone-identity:get_project": {
              "key": "identity:get_project",
              "value": "rule:admin_required or project_id:%(target.project.id)s"
              }, 
            "keystone-identity:update_region": {
              "key": "identity:update_region",
              "value": "rule:admin_required"
              }, 
            "keystone-identity:create_region": {
              "key": "identity:create_region",
              "value": "rule:admin_required"
              }, 
            "keystone-identity:get_protocol": {
              "key": "identity:get_protocol",
              "value": "rule:admin_required"
              }, 
            "keystone-identity:check_policy_association_for_endpoint": {
              "key": "identity:check_policy_association_for_endpoint",
              "value": "rule:admin_required"
              }, 
            "keystone-identity:get_domain_role": {
              "key": "identity:get_domain_role",
              "value": "rule:admin_required"
              }, 
            "keystone-identity:get_service": {
              "key": "identity:get_service",
              "value": "rule:admin_required"
              }, 
            "keystone-identity:create_policy_association_for_endpoint": {
              "key": "identity:create_policy_association_for_endpoint",
              "value": "rule:admin_required"
              }, 
            "keystone-identity:get_policy": {
              "key": "identity:get_policy",
              "value": "rule:admin_required"
              }, 
            "keystone-service_or_admin": {
              "key": "service_or_admin",
              "value": "rule:admin_required or rule:service_role"
              }, 
            "keystone-identity:get_access_token_role": {
              "key": "identity:get_access_token_role",
              "value": "rule:admin_required"
              }, 
            "keystone-identity:update_policy": {
              "key": "identity:update_policy",
              "value": "rule:admin_required"
              }, 
            "keystone-identity:delete_consumer": {
              "key": "identity:delete_consumer",
              "value": "rule:admin_required"
              }, 
            "keystone-identity:remove_user_from_group": {
              "key": "identity:remove_user_from_group",
              "value": "rule:admin_required"
              }, 
            "keystone-identity:create_policy_association_for_region_and_service": {
              "key": "identity:create_policy_association_for_region_and_service",
              "value": "rule:admin_required"
              }, 
            "keystone-identity:create_mapping": {
              "key": "identity:create_mapping",
              "value": "rule:admin_required"
              }, 
            "keystone-identity:list_projects_for_endpoint": {
              "key": "identity:list_projects_for_endpoint",
              "value": "rule:admin_required"
              }, 
            "keystone-identity:list_role_assignments": {
              "key": "identity:list_role_assignments",
              "value": "rule:admin_required"
              }, 
            "keystone-identity:get_credential": {
              "key": "identity:get_credential",
              "value": "rule:admin_required"
              }, 
            "keystone-identity:create_service": {
              "key": "identity:create_service",
              "value": "rule:admin_required"
              }, 
            "keystone-identity:list_mappings": {
              "key": "identity:list_mappings",
              "value": "rule:admin_required"
              }, 
            "keystone-admin_or_owner": {
              "key": "admin_or_owner",
              "value": "rule:admin_required or rule:owner"
              }, 
            "keystone-identity:create_policy": {
              "key": "identity:create_policy",
              "value": "rule:admin_required"
              }, 
            "keystone-identity:delete_user": {
              "key": "identity:delete_user",
              "value": "rule:admin_required"
              }, 
            "keystone-identity:get_group": {
              "key": "identity:get_group",
              "value": "rule:admin_required"
              }, 
            "keystone-identity:create_consumer": {
              "key": "identity:create_consumer",
              "value": "rule:admin_required"
              }, 
            "keystone-identity:list_roles_for_trust": {
              "key": "identity:list_roles_for_trust",
              "value": ""
              }, 
            "keystone-identity:check_policy_association_for_region_and_service": {
              "key": "identity:check_policy_association_for_region_and_service",
              "value": "rule:admin_required"
              }, 
            "keystone-default": {
              "key": "default",
              "value": "rule:admin_required"
              }, 
            "keystone-identity:list_service_providers": {
              "key": "identity:list_service_providers",
              "value": "rule:admin_required"
              }, 
            "keystone-identity:get_consumer": {
              "key": "identity:get_consumer",
              "value": "rule:admin_required"
              }, 
            "keystone-identity:revoke_grant": {
              "key": "identity:revoke_grant",
              "value": "rule:admin_required"
              }, 
            "keystone-identity:list_user_projects": {
              "key": "identity:list_user_projects",
              "value": "rule:admin_or_owner"
              }, 
            "keystone-identity:list_implied_roles": {
              "key": "identity:list_implied_roles",
              "value": "rule:admin_required"
              }, 
            "keystone-identity:list_role_assignments_for_tree": {
              "key": "identity:list_role_assignments_for_tree",
              "value": "rule:admin_required"
              }, 
            "keystone-identity:list_endpoints": {
              "key": "identity:list_endpoints",
              "value": "rule:admin_required"
              }, 
            "keystone-identity:get_auth_domains": {
              "key": "identity:get_auth_domains",
              "value": ""
              }, 
            "keystone-identity:check_policy_association_for_service": {
              "key": "identity:check_policy_association_for_service",
              "value": "rule:admin_required"
              }, 
            "keystone-identity:delete_protocol": {
              "key": "identity:delete_protocol",
              "value": "rule:admin_required"
              }, 
            "keystone-identity:add_endpoint_group_to_project": {
              "key": "identity:add_endpoint_group_to_project",
              "value": "rule:admin_required"
              }, 
            "keystone-identity:update_project": {
              "key": "identity:update_project",
              "value": "rule:admin_required"
              }, 
            "keystone-identity:delete_group": {
              "key": "identity:delete_group",
              "value": "rule:admin_required"
              }, 
            "keystone-identity:delete_domain": {
              "key": "identity:delete_domain",
              "value": "rule:admin_required"
              }, 
            "keystone-identity:add_endpoint_to_project": {
              "key": "identity:add_endpoint_to_project",
              "value": "rule:admin_required"
              }, 
            "keystone-identity:delete_access_token": {
              "key": "identity:delete_access_token",
              "value": "rule:admin_required"
              }, 
            "keystone-identity:update_credential": {
              "key": "identity:update_credential",
              "value": "rule:admin_required"
              }, 
            "keystone-identity:get_service_provider": {
              "key": "identity:get_service_provider",
              "value": "rule:admin_required"
              }, 
            "keystone-identity:revoke_token": {
              "key": "identity:revoke_token",
              "value": "rule:admin_or_token_subject"
              }, 
            "keystone-identity:list_roles": {
              "key": "identity:list_roles",
              "value": "rule:admin_required"
              }, 
            "keystone-identity:update_domain_config": {
              "key": "identity:update_domain_config",
              "value": "rule:admin_required"
              }, 
            "keystone-identity:list_grants": {
              "key": "identity:list_grants",
              "value": "rule:admin_required"
              }, 
            "keystone-identity:ec2_list_credentials": {
              "key": "identity:ec2_list_credentials",
              "value": "rule:admin_or_owner"
              }, 
            "keystone-identity:list_users": {
              "key": "identity:list_users",
              "value": "rule:admin_required"
              }, 
            "keystone-identity:delete_policy_association_for_endpoint": {
              "key": "identity:delete_policy_association_for_endpoint",
              "value": "rule:admin_required"
              }, 
            "keystone-identity:create_endpoint_group": {
              "key": "identity:create_endpoint_group",
              "value": "rule:admin_required"
              }, 
            "keystone-token_subject": {
              "key": "token_subject",
              "value": "user_id:%(target.token.user_id)s"
              }, 
            "keystone-admin_required": {
              "key": "admin_required",
              "value": "role:admin or is_admin:1"
              }, 
            "keystone-identity:get_role": {
              "key": "identity:get_role",
              "value": "rule:admin_required"
              }, 
            "keystone-identity:update_group": {
              "key": "identity:update_group",
              "value": "rule:admin_required"
              }, 
            "keystone-identity:remove_endpoint_from_project": {
              "key": "identity:remove_endpoint_from_project",
              "value": "rule:admin_required"
              }, 
            "keystone-identity:list_role_inference_rules": {
              "key": "identity:list_role_inference_rules",
              "value": "rule:admin_required"
              }, 
            "keystone-identity:change_password": {
              "key": "identity:change_password",
              "value": "rule:admin_or_owner"
              }, 
            "keystone-identity:get_implied_role": {
              "key": "identity:get_implied_role",
              "value": "rule:admin_required "
              }, 
            "keystone-identity:delete_credential": {
              "key": "identity:delete_credential",
              "value": "rule:admin_required"
              }, 
            "keystone-identity:update_domain_role": {
              "key": "identity:update_domain_role",
              "value": "rule:admin_required"
              }, 
            "keystone-identity:get_endpoint_group": {
              "key": "identity:get_endpoint_group",
              "value": "rule:admin_required"
              }, 
            "keystone-identity:get_domain_config": {
              "key": "identity:get_domain_config",
              "value": "rule:admin_required"
              }, 
            "keystone-identity:list_domain_roles": {
              "key": "identity:list_domain_roles",
              "value": "rule:admin_required"
              }, 
            "keystone-identity:check_endpoint_in_project": {
              "key": "identity:check_endpoint_in_project",
              "value": "rule:admin_required"
              }, 
            "keystone-identity:list_users_in_group": {
              "key": "identity:list_users_in_group",
              "value": "rule:admin_required"
              }, 
            "keystone-identity:update_user": {
              "key": "identity:update_user",
              "value": "rule:admin_required"
              }, 
            "keystone-identity:validate_token_head": {
              "key": "identity:validate_token_head",
              "value": "rule:service_or_admin"
              }, 
            "keystone-identity:list_groups_for_user": {
              "key": "identity:list_groups_for_user",
              "value": "rule:admin_or_owner"
              }, 
            "keystone-identity:list_access_token_roles": {
              "key": "identity:list_access_token_roles",
              "value": "rule:admin_required"
              }, 
            "keystone-identity:get_domain": {
              "key": "identity:get_domain",
              "value": "rule:admin_required or token.project.domain.id:%(target.domain.id)s"
              }, 
            "keystone-identity:delete_region": {
              "key": "identity:delete_region",
              "value": "rule:admin_required"
              }
        }
        manila::policy::policies: { 
            "manila-consistency_group:reset_status": {
              "key": "consistency_group:reset_status",
              "value": "rule:admin_api"
              }, 
            "manila-share_network:detail": {
              "key": "share_network:detail",
              "value": "rule:default"
              }, 
            "manila-share_network:index": {
              "key": "share_network:index",
              "value": "rule:default"
              }, 
            "manila-share:access_get": {
              "key": "share:access_get",
              "value": "rule:default"
              }, 
            "manila-quota_class_set:show": {
              "key": "quota_class_set:show",
              "value": "rule:default"
              }, 
            "manila-share:access_get_all": {
              "key": "share:access_get_all",
              "value": "rule:default"
              }, 
            "manila-share_replica:force_delete": {
              "key": "share_replica:force_delete",
              "value": "rule:admin_api"
              }, 
            "manila-share_instance:index": {
              "key": "share_instance:index",
              "value": "rule:admin_api"
              }, 
            "manila-scheduler_stats:pools:index": {
              "key": "scheduler_stats:pools:index",
              "value": "rule:admin_api"
              }, 
            "manila-share_instance_export_location:index": {
              "key": "share_instance_export_location:index",
              "value": "rule:admin_api"
              }, 
            "manila-consistency_group:delete": {
              "key": "consistency_group:delete",
              "value": "rule:default"
              }, 
            "manila-cgsnapshot:update": {
              "key": "cgsnapshot:update",
              "value": "rule:default"
              }, 
            "manila-share_server:show": {
              "key": "share_server:show",
              "value": "rule:admin_api"
              }, 
            "manila-share_type:index": {
              "key": "share_type:index",
              "value": "rule:default"
              }, 
            "manila-share:delete": {
              "key": "share:delete",
              "value": "rule:default"
              }, 
            "manila-consistency_group:get": {
              "key": "consistency_group:get",
              "value": "rule:default"
              }, 
            "manila-share_snapshot:snapshot_update": {
              "key": "share_snapshot:snapshot_update",
              "value": "rule:default"
              }, 
            "manila-share_snapshot:create_snapshot": {
              "key": "share_snapshot:create_snapshot",
              "value": "rule:default"
              }, 
            "manila-share_instance_export_location:show": {
              "key": "share_instance_export_location:show",
              "value": "rule:admin_api"
              }, 
            "manila-context_is_admin": {
              "key": "context_is_admin",
              "value": "role:admin and rule:deny_readonly"
              }, 
            "manila-scheduler_stats:pools:detail": {
              "key": "scheduler_stats:pools:detail",
              "value": "rule:admin_api"
              }, 
            "manila-deny_readonly": {
              "key": "deny_readonly",
              "value": "not role:readonly"
              }, 
            "manila-cgsnapshot:get_cgsnapshot": {
              "key": "cgsnapshot:get_cgsnapshot",
              "value": "rule:default"
              }, 
            "manila-share:migration_complete": {
              "key": "share:migration_complete",
              "value": "rule:admin_api"
              }, 
            "manila-share_replica:show": {
              "key": "share_replica:show",
              "value": "rule:default"
              }, 
            "manila-share_replica:create": {
              "key": "share_replica:create",
              "value": "rule:default"
              }, 
            "manila-share_replica:promote": {
              "key": "share_replica:promote",
              "value": "rule:default"
              }, 
            "manila-share:get_all": {
              "key": "share:get_all",
              "value": "rule:default"
              }, 
            "manila-admin_api": {
              "key": "admin_api",
              "value": "is_admin:True"
              }, 
            "manila-share:get": {
              "key": "share:get",
              "value": "rule:default"
              }, 
            "manila-share_snapshot:delete_snapshot": {
              "key": "share_snapshot:delete_snapshot",
              "value": "rule:default"
              }, 
            "manila-share_instance:show": {
              "key": "share_instance:show",
              "value": "rule:admin_api"
              }, 
            "manila-share_replica:reset_replica_state": {
              "key": "share_replica:reset_replica_state",
              "value": "rule:admin_api"
              }, 
            "manila-share:list_by_share_server_id": {
              "key": "share:list_by_share_server_id",
              "value": "rule:admin_api"
              }, 
            "manila-share_type:show": {
              "key": "share_type:show",
              "value": "rule:default"
              }, 
            "manila-share:get_share_metadata": {
              "key": "share:get_share_metadata",
              "value": "rule:default"
              }, 
            "manila-share:migration_cancel": {
              "key": "share:migration_cancel",
              "value": "rule:admin_api"
              }, 
            "manila-share_replica:get_all": {
              "key": "share_replica:get_all",
              "value": "rule:default"
              }, 
            "manila-share_type:add_project_access": {
              "key": "share_type:add_project_access",
              "value": "rule:admin_api and rule:deny_readonly"
              }, 
            "manila-share_network:create": {
              "key": "share_network:create",
              "value": "rule:default"
              }, 
            "manila-cgsnapshot:delete": {
              "key": "cgsnapshot:delete",
              "value": "rule:default"
              }, 
            "manila-share_types_extra_spec:delete": {
              "key": "share_types_extra_spec:delete",
              "value": "rule:admin_api"
              }, 
            "manila-share_snapshot:get_snapshot": {
              "key": "share_snapshot:get_snapshot",
              "value": "rule:default"
              }, 
            "manila-share:delete_share_metadata": {
              "key": "share:delete_share_metadata",
              "value": "rule:default"
              }, 
            "manila-share:allow_access": {
              "key": "share:allow_access",
              "value": "rule:default"
              }, 
            "manila-share_replica:resync": {
              "key": "share_replica:resync",
              "value": "rule:admin_api"
              }, 
            "manila-share:migration_start": {
              "key": "share:migration_start",
              "value": "rule:admin_api"
              }, 
            "manila-share_snapshot:force_delete": {
              "key": "share_snapshot:force_delete",
              "value": "rule:admin_api"
              }, 
            "manila-share_replica:reset_status": {
              "key": "share_replica:reset_status",
              "value": "rule:admin_api"
              }, 
            "manila-share:reset_task_state": {
              "key": "share:reset_task_state",
              "value": "rule:admin_api"
              }, 
            "manila-share_type:remove_project_access": {
              "key": "share_type:remove_project_access",
              "value": "rule:admin_api and rule:deny_readonly"
              }, 
            "manila-consistency_group:force_delete": {
              "key": "consistency_group:force_delete",
              "value": "rule:admin_api"
              }, 
            "manila-share:create": {
              "key": "share:create",
              "value": "rule:deny_readonly"
              }, 
            "manila-share:update_share_metadata": {
              "key": "share:update_share_metadata",
              "value": "rule:default"
              }, 
            "manila-share_instance:reset_status": {
              "key": "share_instance:reset_status",
              "value": "rule:admin_api"
              }, 
            "manila-share:unmanage": {
              "key": "share:unmanage",
              "value": "rule:admin_api"
              }, 
            "manila-share_server:details": {
              "key": "share_server:details",
              "value": "rule:admin_api"
              }, 
            "manila-quota_set:update": {
              "key": "quota_set:update",
              "value": "rule:admin_api"
              }, 
            "manila-security_service:show": {
              "key": "security_service:show",
              "value": "rule:default"
              }, 
            "manila-share_type:delete": {
              "key": "share_type:delete",
              "value": "rule:admin_api"
              }, 
            "manila-security_service:update": {
              "key": "security_service:update",
              "value": "rule:default"
              }, 
            "manila-security_service:index": {
              "key": "security_service:index",
              "value": "rule:default"
              }, 
            "manila-security_service:create": {
              "key": "security_service:create",
              "value": "rule:default"
              }, 
            "manila-share:manage": {
              "key": "share:manage",
              "value": "rule:admin_api"
              }, 
            "manila-share_network:show": {
              "key": "share_network:show",
              "value": "rule:default"
              }, 
            "manila-security_service:delete": {
              "key": "security_service:delete",
              "value": "rule:default"
              }, 
            "manila-consistency_group:update": {
              "key": "consistency_group:update",
              "value": "rule:default"
              }, 
            "manila-share_instance:force_delete": {
              "key": "share_instance:force_delete",
              "value": "rule:admin_api"
              }, 
            "manila-security_service:get_all_security_services": {
              "key": "security_service:get_all_security_services",
              "value": "rule:admin_api"
              }, 
            "manila-share_types_extra_spec:show": {
              "key": "share_types_extra_spec:show",
              "value": "rule:admin_api"
              }, 
            "manila-quota_set:show": {
              "key": "quota_set:show",
              "value": "rule:default"
              }, 
            "manila-share_replica:delete": {
              "key": "share_replica:delete",
              "value": "rule:default"
              }, 
            "manila-share_type:create": {
              "key": "share_type:create",
              "value": "rule:admin_api"
              }, 
            "manila-share:force_delete": {
              "key": "share:force_delete",
              "value": "rule:admin_api"
              }, 
            "manila-admin_or_owner": {
              "key": "admin_or_owner",
              "value": "is_admin:True or project_id:%(project_id)s"
              }, 
            "manila-share_type:list_project_access": {
              "key": "share_type:list_project_access",
              "value": "rule:admin_api"
              }, 
            "manila-consistency_group:create": {
              "key": "consistency_group:create",
              "value": "rule:default"
              }, 
            "manila-default": {
              "key": "default",
              "value": "rule:admin_or_owner"
              }, 
            "manila-share:reset_status": {
              "key": "share:reset_status",
              "value": "rule:admin_api"
              }, 
            "manila-share_snapshot:get_all_snapshots": {
              "key": "share_snapshot:get_all_snapshots",
              "value": "rule:default"
              }, 
            "manila-share:deny_access": {
              "key": "share:deny_access",
              "value": "rule:default"
              }, 
            "manila-cgsnapshot:get_all": {
              "key": "cgsnapshot:get_all",
              "value": "rule:default"
              }, 
            "manila-share_snapshot:unmanage_snapshot": {
              "key": "share_snapshot:unmanage_snapshot",
              "value": "rule:admin_api"
              }, 
            "manila-share_network:delete": {
              "key": "share_network:delete",
              "value": "rule:default"
              }, 
            "manila-share_snapshot_instance:show": {
              "key": "share_snapshot_instance:show",
              "value": "rule:admin_api"
              }, 
            "manila-share_snapshot:manage_snapshot": {
              "key": "share_snapshot:manage_snapshot",
              "value": "rule:admin_api"
              }, 
            "manila-availability_zone:index": {
              "key": "availability_zone:index",
              "value": "rule:default"
              }, 
            "manila-cgsnapshot:create": {
              "key": "cgsnapshot:create",
              "value": "rule:default"
              }, 
            "manila-share_export_location:index": {
              "key": "share_export_location:index",
              "value": "rule:default"
              }, 
            "manila-share:shrink": {
              "key": "share:shrink",
              "value": "rule:default"
              }, 
            "manila-share:update": {
              "key": "share:update",
              "value": "rule:default"
              }, 
            "manila-consistency_group:get_all": {
              "key": "consistency_group:get_all",
              "value": "rule:default"
              }, 
            "manila-share_types_extra_spec:index": {
              "key": "share_types_extra_spec:index",
              "value": "rule:admin_api"
              }, 
            "manila-cgsnapshot:force_delete": {
              "key": "cgsnapshot:force_delete",
              "value": "rule:admin_api"
              }, 
            "manila-security_service:detail": {
              "key": "security_service:detail",
              "value": "rule:default"
              }, 
            "manila-share:migration_get_progress": {
              "key": "share:migration_get_progress",
              "value": "rule:admin_api"
              }, 
            "manila-share_type:default": {
              "key": "share_type:default",
              "value": "rule:default"
              }, 
            "manila-share_network:update": {
              "key": "share_network:update",
              "value": "rule:default"
              }, 
            "manila-quota_class_set:update": {
              "key": "quota_class_set:update",
              "value": "rule:admin_api"
              }, 
            "manila-share_snapshot_instance:detail": {
              "key": "share_snapshot_instance:detail",
              "value": "rule:admin_api"
              }, 
            "manila-share_network:add_security_service": {
              "key": "share_network:add_security_service",
              "value": "rule:default"
              }, 
            "manila-service:index": {
              "key": "service:index",
              "value": "rule:admin_api"
              }, 
            "manila-share_server:delete": {
              "key": "share_server:delete",
              "value": "rule:admin_api"
              }, 
            "manila-cgsnapshot:reset_status": {
              "key": "cgsnapshot:reset_status",
              "value": "rule:admin_api"
              }, 
            "manila-share_server:index": {
              "key": "share_server:index",
              "value": "rule:admin_api"
              }, 
            "manila-quota_set:delete": {
              "key": "quota_set:delete",
              "value": "rule:admin_api"
              }, 
            "manila-share_types_extra_spec:create": {
              "key": "share_types_extra_spec:create",
              "value": "rule:admin_api"
              }, 
            "manila-share_snapshot_instance:reset_status": {
              "key": "share_snapshot_instance:reset_status",
              "value": "rule:admin_api"
              }, 
            "manila-share_types_extra_spec:update": {
              "key": "share_types_extra_spec:update",
              "value": "rule:admin_api"
              }, 
            "manila-service:update": {
              "key": "service:update",
              "value": "rule:admin_api"
              }, 
            "manila-share_snapshot_instance:index": {
              "key": "share_snapshot_instance:index",
              "value": "rule:admin_api"
              }, 
            "manila-share_export_location:show": {
              "key": "share_export_location:show",
              "value": "rule:default"
              }, 
            "manila-share_network:remove_security_service": {
              "key": "share_network:remove_security_service",
              "value": "rule:default and rule:deny_readonly"
              }, 
            "manila-share_network:get_all_share_networks": {
              "key": "share_network:get_all_share_networks",
              "value": "rule:admin_api"
              }, 
            "manila-share_snapshot:reset_status": {
              "key": "share_snapshot:reset_status",
              "value": "rule:admin_api"
              }, 
            "manila-share:extend": {
              "key": "share:extend",
              "value": "rule:default"
              }
        }
        mistral::policy::policies: { 
            "mistral-actions:get": {
              "key": "actions:get",
              "value": "rule:admin_or_owner"
              }, 
            "mistral-workflows:list": {
              "key": "workflows:list",
              "value": "rule:admin_or_owner"
              }, 
            "mistral-workflows:delete": {
              "key": "workflows:delete",
              "value": "rule:admin_or_owner"
              }, 
            "mistral-action_executions:list": {
              "key": "action_executions:list",
              "value": "rule:admin_or_owner"
              }, 
            "mistral-cron_triggers:list": {
              "key": "cron_triggers:list",
              "value": "rule:admin_or_owner"
              }, 
            "mistral-services:list": {
              "key": "services:list",
              "value": "rule:admin_or_owner"
              }, 
            "mistral-environments:update": {
              "key": "environments:update",
              "value": "rule:admin_or_owner"
              }, 
            "mistral-tasks:get": {
              "key": "tasks:get",
              "value": "rule:admin_or_owner"
              }, 
            "mistral-environments:delete": {
              "key": "environments:delete",
              "value": "rule:admin_or_owner"
              }, 
            "mistral-members:create": {
              "key": "members:create",
              "value": "rule:admin_or_owner"
              }, 
            "mistral-actions:update": {
              "key": "actions:update",
              "value": "rule:admin_or_owner"
              }, 
            "mistral-workbooks:get": {
              "key": "workbooks:get",
              "value": "rule:admin_or_owner"
              }, 
            "mistral-tasks:list": {
              "key": "tasks:list",
              "value": "rule:admin_or_owner"
              }, 
            "mistral-executions:get": {
              "key": "executions:get",
              "value": "rule:admin_or_owner"
              }, 
            "mistral-action_executions:get": {
              "key": "action_executions:get",
              "value": "rule:admin_or_owner"
              }, 
            "mistral-members:update": {
              "key": "members:update",
              "value": "rule:admin_or_owner"
              }, 
            "mistral-members:delete": {
              "key": "members:delete",
              "value": "rule:admin_or_owner"
              }, 
            "mistral-event_triggers:update": {
              "key": "event_triggers:update",
              "value": "rule:admin_or_owner"
              }, 
            "mistral-workbooks:list": {
              "key": "workbooks:list",
              "value": "rule:admin_or_owner"
              }, 
            "mistral-executions:delete": {
              "key": "executions:delete",
              "value": "rule:admin_or_owner"
              }, 
            "mistral-cron_triggers:create": {
              "key": "cron_triggers:create",
              "value": "rule:admin_or_owner"
              }, 
            "mistral-cron_triggers:delete": {
              "key": "cron_triggers:delete",
              "value": "rule:admin_or_owner"
              }, 
            "mistral-event_triggers:delete": {
              "key": "event_triggers:delete",
              "value": "rule:admin_or_owner"
              }, 
            "mistral-event_triggers:create": {
              "key": "event_triggers:create",
              "value": "rule:admin_or_owner"
              }, 
            "mistral-workbooks:create": {
              "key": "workbooks:create",
              "value": "rule:admin_or_owner"
              }, 
            "mistral-members:list": {
              "key": "members:list",
              "value": "rule:admin_or_owner"
              }, 
            "mistral-actions:delete": {
              "key": "actions:delete",
              "value": "rule:admin_or_owner"
              }, 
            "mistral-tasks:update": {
              "key": "tasks:update",
              "value": "rule:admin_or_owner"
              }, 
            "mistral-workflows:create": {
              "key": "workflows:create",
              "value": "rule:admin_or_owner"
              }, 
            "mistral-admin_only": {
              "key": "admin_only",
              "value": "is_admin:True"
              }, 
            "mistral-actions:list": {
              "key": "actions:list",
              "value": "rule:admin_or_owner"
              }, 
            "mistral-workbooks:delete": {
              "key": "workbooks:delete",
              "value": "rule:admin_or_owner"
              }, 
            "mistral-executions:update": {
              "key": "executions:update",
              "value": "rule:admin_or_owner"
              }, 
            "mistral-members:get": {
              "key": "members:get",
              "value": "rule:admin_or_owner"
              }, 
            "mistral-executions:list": {
              "key": "executions:list",
              "value": "rule:admin_or_owner"
              }, 
            "mistral-cron_triggers:get": {
              "key": "cron_triggers:get",
              "value": "rule:admin_or_owner"
              }, 
            "mistral-environments:list": {
              "key": "environments:list",
              "value": "rule:admin_or_owner"
              }, 
            "mistral-action_executions:delete": {
              "key": "action_executions:delete",
              "value": "rule:admin_or_owner"
              }, 
            "mistral-workbooks:update": {
              "key": "workbooks:update",
              "value": "rule:admin_or_owner"
              }, 
            "mistral-executions:create": {
              "key": "executions:create",
              "value": "rule:admin_or_owner"
              }, 
            "mistral-workflows:update": {
              "key": "workflows:update",
              "value": "rule:admin_or_owner"
              }, 
            "mistral-event_triggers:get": {
              "key": "event_triggers:get",
              "value": "rule:admin_or_owner"
              }, 
            "mistral-default": {
              "key": "default",
              "value": "rule:admin_or_owner"
              }, 
            "mistral-workflows:get": {
              "key": "workflows:get",
              "value": "rule:admin_or_owner"
              }, 
            "mistral-environments:get": {
              "key": "environments:get",
              "value": "rule:admin_or_owner"
              }, 
            "mistral-action_executions:update": {
              "key": "action_executions:update",
              "value": "rule:admin_or_owner"
              }, 
            "mistral-action_execution:create": {
              "key": "action_execution:create",
              "value": "rule:admin_or_owner"
              }, 
            "mistral-environments:create": {
              "key": "environments:create",
              "value": "rule:admin_or_owner"
              }, 
            "mistral-actions:create": {
              "key": "actions:create",
              "value": "rule:admin_or_owner"
              }, 
            "mistral-event_triggers:list": {
              "key": "event_triggers:list",
              "value": "rule:admin_or_owner"
              }, 
            "mistral-admin_or_owner": {
              "key": "admin_or_owner",
              "value": "is_admin:True or project_id:%(project_id)s"
              }
        }
        neutron::policy::policies: { 
            "neutron-create_router:distributed": {
              "key": "create_router:distributed",
              "value": "rule:admin_only"
              }, 
            "neutron-get_policy_dscp_marking_rule": {
              "key": "get_policy_dscp_marking_rule",
              "value": "rule:regular_user"
              }, 
            "neutron-shared_subnetpools": {
              "key": "shared_subnetpools",
              "value": "field:subnetpools:shared=True"
              }, 
            "neutron-create_port:fixed_ips": {
              "key": "create_port:fixed_ips",
              "value": "rule:context_is_advsvc or rule:admin_or_network_owner"
              }, 
            "neutron-context_is_advsvc": {
              "key": "context_is_advsvc",
              "value": "role:advsvc and rule:deny_readonly"
              }, 
            "neutron-get_floatingip": {
              "key": "get_floatingip",
              "value": "rule:admin_or_owner"
              }, 
            "neutron-update_port:port_security_enabled": {
              "key": "update_port:port_security_enabled",
              "value": "rule:context_is_advsvc or rule:admin_or_network_owner"
              }, 
            "neutron-update_network_profile": {
              "key": "update_network_profile",
              "value": "rule:admin_only"
              }, 
            "neutron-delete_floatingip": {
              "key": "delete_floatingip",
              "value": "rule:admin_or_owner and rule:deny_readonly"
              }, 
            "neutron-get_network_profiles": {
              "key": "get_network_profiles",
              "value": ""
              }, 
            "neutron-update_subnetpool:is_default": {
              "key": "update_subnetpool:is_default",
              "value": "rule:admin_only"
              }, 
            "neutron-create_port:mac_learning_enabled": {
              "key": "create_port:mac_learning_enabled",
              "value": "rule:context_is_advsvc or rule:admin_or_network_owner"
              }, 
            "neutron-get_service_profiles": {
              "key": "get_service_profiles",
              "value": "rule:admin_only"
              }, 
            "neutron-get_trunk": {
              "key": "get_trunk",
              "value": "rule:admin_or_owner"
              }, 
            "neutron-get_flavor_service_profile": {
              "key": "get_flavor_service_profile",
              "value": "rule:regular_user"
              }, 
            "neutron-delete_network_profile": {
              "key": "delete_network_profile",
              "value": "rule:admin_only"
              }, 
            "neutron-get_port": {
              "key": "get_port",
              "value": "rule:context_is_advsvc or rule:admin_owner_or_network_owner"
              }, 
            "neutron-delete_address_scope": {
              "key": "delete_address_scope",
              "value": "rule:admin_or_owner and rule:deny_readonly"
              }, 
            "neutron-get_rbac_policy": {
              "key": "get_rbac_policy",
              "value": "rule:admin_or_owner"
              }, 
            "neutron-update_policy_dscp_marking_rule": {
              "key": "update_policy_dscp_marking_rule",
              "value": "rule:admin_only"
              }, 
            "neutron-update_address_scope:shared": {
              "key": "update_address_scope:shared",
              "value": "rule:admin_only"
              }, 
            "neutron-delete_metering_label_rule": {
              "key": "delete_metering_label_rule",
              "value": "rule:admin_only"
              }, 
            "neutron-get_dhcp-networks": {
              "key": "get_dhcp-networks",
              "value": "rule:admin_only"
              }, 
            "neutron-update_network:provider:segmentation_id": {
              "key": "update_network:provider:segmentation_id",
              "value": "rule:admin_only"
              }, 
            "neutron-create_network:segments": {
              "key": "create_network:segments",
              "value": "rule:admin_only"
              }, 
            "neutron-get_policy_profiles": {
              "key": "get_policy_profiles",
              "value": ""
              }, 
            "neutron-get_port:binding:host_id": {
              "key": "get_port:binding:host_id",
              "value": "rule:admin_only"
              }, 
            "neutron-remove_subports": {
              "key": "remove_subports",
              "value": "rule:admin_or_owner and rule:deny_readonly"
              }, 
            "neutron-get_rule_type": {
              "key": "get_rule_type",
              "value": "rule:regular_user"
              }, 
            "neutron-context_is_admin": {
              "key": "context_is_admin",
              "value": "role:admin and rule:deny_readonly"
              }, 
            "neutron-deny_readonly": {
              "key": "deny_readonly",
              "value": "not role:readonly"
              }, 
            "neutron-create_segment": {
              "key": "create_segment",
              "value": "rule:admin_only and rule:deny_readonly"
              }, 
            "neutron-update_port:binding:host_id": {
              "key": "update_port:binding:host_id",
              "value": "rule:admin_only and rule:deny_readonly"
              }, 
            "neutron-delete_port": {
              "key": "delete_port",
              "value": "rule:context_is_advsvc or rule:admin_owner_or_network_owner"
              }, 
            "neutron-delete_rbac_policy": {
              "key": "delete_rbac_policy",
              "value": "rule:admin_or_owner"
              }, 
            "neutron-get_policy_profile": {
              "key": "get_policy_profile",
              "value": ""
              }, 
            "neutron-update_network:router:external": {
              "key": "update_network:router:external",
              "value": "rule:admin_only"
              }, 
            "neutron-create_network:provider:segmentation_id": {
              "key": "create_network:provider:segmentation_id",
              "value": "rule:admin_only"
              }, 
            "neutron-get_subnet": {
              "key": "get_subnet",
              "value": "rule:admin_or_owner or rule:shared"
              }, 
            "neutron-update_port:device_owner": {
              "key": "update_port:device_owner",
              "value": "not rule:network_device or rule:context_is_advsvc or rule:admin_or_network_owner"
              }, 
            "neutron-update_policy": {
              "key": "update_policy",
              "value": "rule:admin_only"
              }, 
            "neutron-get_policy": {
              "key": "get_policy",
              "value": "rule:regular_user"
              }, 
            "neutron-update_network": {
              "key": "update_network",
              "value": "rule:admin_or_owner and rule:deny_readonly"
              }, 
            "neutron-delete_network": {
              "key": "delete_network",
              "value": "rule:admin_or_owner and rule:deny_readonly"
              }, 
            "neutron-get_service_profile": {
              "key": "get_service_profile",
              "value": "rule:admin_only"
              }, 
            "neutron-get_policy_minimum_bandwidth_rule": {
              "key": "get_policy_minimum_bandwidth_rule",
              "value": "rule:regular_user"
              }, 
            "neutron-update_subnet": {
              "key": "update_subnet",
              "value": "rule:admin_or_network_owner and rule:deny_readonly"
              }, 
            "neutron-update_router:ha": {
              "key": "update_router:ha",
              "value": "rule:admin_only"
              }, 
            "neutron-delete_flavor_service_profile": {
              "key": "delete_flavor_service_profile",
              "value": "rule:admin_only"
              }, 
            "neutron-get_flavor": {
              "key": "get_flavor",
              "value": "rule:regular_user"
              }, 
            "neutron-create_policy_bandwidth_limit_rule": {
              "key": "create_policy_bandwidth_limit_rule",
              "value": "rule:admin_only"
              }, 
            "neutron-create_metering_label_rule": {
              "key": "create_metering_label_rule",
              "value": "rule:admin_only"
              }, 
            "neutron-get_metering_label_rule": {
              "key": "get_metering_label_rule",
              "value": "rule:admin_only"
              }, 
            "neutron-get_address_scope": {
              "key": "get_address_scope",
              "value": "rule:admin_or_owner or rule:shared_address_scopes"
              }, 
            "neutron-create_router:external_gateway_info:external_fixed_ips": {
              "key": "create_router:external_gateway_info:external_fixed_ips",
              "value": "rule:admin_only"
              }, 
            "neutron-create_lsn": {
              "key": "create_lsn",
              "value": "rule:admin_only"
              }, 
            "neutron-update_rbac_policy:target_tenant": {
              "key": "update_rbac_policy:target_tenant",
              "value": "rule:restrict_wildcard and rule:admin_or_owner"
              }, 
            "neutron-create_rbac_policy:target_tenant": {
              "key": "create_rbac_policy:target_tenant",
              "value": "rule:restrict_wildcard"
              }, 
            "neutron-get_port:binding:vif_details": {
              "key": "get_port:binding:vif_details",
              "value": "rule:admin_only"
              }, 
            "neutron-get_router:ha": {
              "key": "get_router:ha",
              "value": "rule:admin_only"
              }, 
            "neutron-create_subnet": {
              "key": "create_subnet",
              "value": "rule:admin_or_network_owner and rule:deny_readonly"
              }, 
            "neutron-create_network:router:external": {
              "key": "create_network:router:external",
              "value": "rule:admin_only"
              }, 
            "neutron-insert_rule": {
              "key": "insert_rule",
              "value": "rule:admin_or_owner and rule:deny_readonly"
              }, 
            "neutron-update_policy_minimum_bandwidth_rule": {
              "key": "update_policy_minimum_bandwidth_rule",
              "value": "rule:admin_only"
              }, 
            "neutron-get_subports": {
              "key": "get_subports",
              "value": ""
              }, 
            "neutron-get_port:binding:vif_type": {
              "key": "get_port:binding:vif_type",
              "value": "rule:admin_only"
              }, 
            "neutron-shared": {
              "key": "shared",
              "value": "field:networks:shared=True"
              }, 
            "neutron-get_agent": {
              "key": "get_agent",
              "value": "rule:admin_only"
              }, 
            "neutron-get_service_provider": {
              "key": "get_service_provider",
              "value": "rule:regular_user"
              }, 
            "neutron-update_subnet:service_types": {
              "key": "update_subnet:service_types",
              "value": "rule:admin_only"
              }, 
            "neutron-create_port:port_security_enabled": {
              "key": "create_port:port_security_enabled",
              "value": "rule:context_is_advsvc or rule:admin_or_network_owner"
              }, 
            "neutron-update_service_profile": {
              "key": "update_service_profile",
              "value": "rule:admin_only"
              }, 
            "neutron-update_network:shared": {
              "key": "update_network:shared",
              "value": "rule:admin_only"
              }, 
            "neutron-update_router:distributed": {
              "key": "update_router:distributed",
              "value": "rule:admin_only"
              }, 
            "neutron-create_port:device_owner": {
              "key": "create_port:device_owner",
              "value": "not rule:network_device or rule:context_is_advsvc or rule:admin_or_network_owner"
              }, 
            "neutron-create_router": {
              "key": "create_router",
              "value": "rule:regular_user and rule:deny_readonly"
              }, 
            "neutron-regular_user": {
              "key": "regular_user",
              "value": "rule:deny_readonly"
              }, 
            "neutron-admin_or_network_owner": {
              "key": "admin_or_network_owner",
              "value": "rule:context_is_admin or tenant_id:%(network:tenant_id)s or role:network_admin"
              }, 
            "neutron-update_segment": {
              "key": "update_segment",
              "value": "rule:admin_only and rule:deny_readonly"
              }, 
            "neutron-delete_policy": {
              "key": "delete_policy",
              "value": "rule:admin_only"
              }, 
            "neutron-get_auto_allocated_topology": {
              "key": "get_auto_allocated_topology",
              "value": "rule:admin_or_owner"
              }, 
            "neutron-create_network:provider:physical_network": {
              "key": "create_network:provider:physical_network",
              "value": "rule:admin_only"
              }, 
            "neutron-shared_address_scopes": {
              "key": "shared_address_scopes",
              "value": "field:address_scopes:shared=True"
              }, 
            "neutron-get_network:provider:segmentation_id": {
              "key": "get_network:provider:segmentation_id",
              "value": "rule:admin_only"
              }, 
            "neutron-delete_policy_dscp_marking_rule": {
              "key": "delete_policy_dscp_marking_rule",
              "value": "rule:admin_only"
              }, 
            "neutron-get_router": {
              "key": "get_router",
              "value": "rule:admin_or_owner"
              }, 
            "neutron-get_l3-agents": {
              "key": "get_l3-agents",
              "value": "rule:admin_only"
              }, 
            "neutron-get_router:distributed": {
              "key": "get_router:distributed",
              "value": "rule:admin_only"
              }, 
            "neutron-get_network": {
              "key": "get_network",
              "value": "rule:admin_or_owner or rule:shared or rule:external or rule:context_is_advsvc"
              }, 
            "neutron-update_network:provider:network_type": {
              "key": "update_network:provider:network_type",
              "value": "rule:admin_only"
              }, 
            "neutron-create_metering_label": {
              "key": "create_metering_label",
              "value": "rule:admin_only"
              }, 
            "neutron-get_subnetpool": {
              "key": "get_subnetpool",
              "value": "rule:admin_or_owner or rule:shared_subnetpools"
              }, 
            "neutron-create_flavor_service_profile": {
              "key": "create_flavor_service_profile",
              "value": "rule:admin_only"
              }, 
            "neutron-get_segment": {
              "key": "get_segment",
              "value": "rule:admin_only"
              }, 
            "neutron-delete_policy_bandwidth_limit_rule": {
              "key": "delete_policy_bandwidth_limit_rule",
              "value": "rule:admin_only"
              }, 
            "neutron-create_l3-router": {
              "key": "create_l3-router",
              "value": "rule:admin_only"
              }, 
            "neutron-admin_owner_or_network_owner": {
              "key": "admin_owner_or_network_owner",
              "value": "rule:owner or rule:admin_or_network_owner"
              }, 
            "neutron-create_network:shared": {
              "key": "create_network:shared",
              "value": "rule:admin_only"
              }, 
            "neutron-get_subnet:segment_id": {
              "key": "get_subnet:segment_id",
              "value": "rule:admin_only"
              }, 
            "neutron-get_qos_queue": {
              "key": "get_qos_queue",
              "value": "rule:admin_only"
              }, 
            "neutron-create_dhcp-network": {
              "key": "create_dhcp-network",
              "value": "rule:admin_only"
              }, 
            "neutron-update_network:segments": {
              "key": "update_network:segments",
              "value": "rule:admin_only"
              }, 
            "neutron-add_subports": {
              "key": "add_subports",
              "value": "rule:admin_or_owner and rule:deny_readonly"
              }, 
            "neutron-create_port:mac_address": {
              "key": "create_port:mac_address",
              "value": "rule:context_is_advsvc or rule:admin_or_network_owner"
              }, 
            "neutron-owner": {
              "key": "owner",
              "value": "tenant_id:%(tenant_id)s and rule:deny_readonly"
              }, 
            "neutron-remove_router_interface": {
              "key": "remove_router_interface",
              "value": "rule:admin_or_owner and rule:deny_readonly"
              }, 
            "neutron-create_subnetpool:is_default": {
              "key": "create_subnetpool:is_default",
              "value": "rule:admin_only"
              }, 
            "neutron-get_lsn": {
              "key": "get_lsn",
              "value": "rule:admin_only"
              }, 
            "neutron-delete_flavor": {
              "key": "delete_flavor",
              "value": "rule:admin_only"
              }, 
            "neutron-get_network:provider:physical_network": {
              "key": "get_network:provider:physical_network",
              "value": "rule:admin_only"
              }, 
            "neutron-create_rbac_policy": {
              "key": "create_rbac_policy",
              "value": "rule:deny_readonly"
              }, 
            "neutron-get_policy_bandwidth_limit_rule": {
              "key": "get_policy_bandwidth_limit_rule",
              "value": "rule:regular_user"
              }, 
            "neutron-create_router:external_gateway_info:enable_snat": {
              "key": "create_router:external_gateway_info:enable_snat",
              "value": "rule:admin_only"
              }, 
            "neutron-delete_l3-router": {
              "key": "delete_l3-router",
              "value": "rule:admin_only"
              }, 
            "neutron-get_dhcp-agents": {
              "key": "get_dhcp-agents",
              "value": "rule:admin_only"
              }, 
            "neutron-update_port:allowed_address_pairs": {
              "key": "update_port:allowed_address_pairs",
              "value": "rule:admin_or_network_owner and rule:deny_readonly"
              }, 
            "neutron-create_network_profile": {
              "key": "create_network_profile",
              "value": "rule:admin_only"
              }, 
            "neutron-create_flavor": {
              "key": "create_flavor",
              "value": "rule:admin_only"
              }, 
            "neutron-get_loadbalancer-hosting-agent": {
              "key": "get_loadbalancer-hosting-agent",
              "value": "rule:admin_only"
              }, 
            "neutron-create_policy_dscp_marking_rule": {
              "key": "create_policy_dscp_marking_rule",
              "value": "rule:admin_only"
              }, 
            "neutron-update_router:external_gateway_info:external_fixed_ips": {
              "key": "update_router:external_gateway_info:external_fixed_ips",
              "value": "rule:admin_only"
              }, 
            "neutron-admin_only": {
              "key": "admin_only",
              "value": "rule:context_is_admin and rule:deny_readonly"
              }, 
            "neutron-remove_rule": {
              "key": "remove_rule",
              "value": "rule:admin_or_owner and rule:deny_readonly"
              }, 
            "neutron-delete_agent": {
              "key": "delete_agent",
              "value": "rule:admin_only"
              }, 
            "neutron-delete_metering_label": {
              "key": "delete_metering_label",
              "value": "rule:admin_only"
              }, 
            "neutron-update_address_scope": {
              "key": "update_address_scope",
              "value": "rule:admin_or_owner and rule:deny_readonly"
              }, 
            "neutron-create_network:is_default": {
              "key": "create_network:is_default",
              "value": "rule:admin_only"
              }, 
            "neutron-external": {
              "key": "external",
              "value": "field:networks:router:external=True"
              }, 
            "neutron-get_network_profile": {
              "key": "get_network_profile",
              "value": ""
              }, 
            "neutron-create_address_scope": {
              "key": "create_address_scope",
              "value": "rule:deny_readonly"
              }, 
            "neutron-get_loadbalancer-agent": {
              "key": "get_loadbalancer-agent",
              "value": "rule:admin_only"
              }, 
            "neutron-get_network:router:external": {
              "key": "get_network:router:external",
              "value": "rule:regular_user"
              }, 
            "neutron-create_address_scope:shared": {
              "key": "create_address_scope:shared",
              "value": "rule:admin_only"
              }, 
            "neutron-get_flavors": {
              "key": "get_flavors",
              "value": "rule:regular_user"
              }, 
            "neutron-create_router:ha": {
              "key": "create_router:ha",
              "value": "rule:admin_only"
              }, 
            "neutron-delete_subnet": {
              "key": "delete_subnet",
              "value": "rule:admin_or_network_owner and rule:deny_readonly"
              }, 
            "neutron-get_network_ip_availabilities": {
              "key": "get_network_ip_availabilities",
              "value": "rule:admin_only"
              }, 
            "neutron-delete_trunk": {
              "key": "delete_trunk",
              "value": "rule:admin_or_owner and rule:deny_readonly"
              }, 
            "neutron-create_network": {
              "key": "create_network",
              "value": "rule:deny_readonly"
              }, 
            "neutron-create_subnetpool": {
              "key": "create_subnetpool",
              "value": "rule:deny_readonly"
              }, 
            "neutron-update_network:provider:physical_network": {
              "key": "update_network:provider:physical_network",
              "value": "rule:admin_only"
              }, 
            "neutron-create_floatingip:floating_ip_address": {
              "key": "create_floatingip:floating_ip_address",
              "value": "rule:admin_only"
              }, 
            "neutron-create_policy_minimum_bandwidth_rule": {
              "key": "create_policy_minimum_bandwidth_rule",
              "value": "rule:admin_only"
              }, 
            "neutron-get_network:provider:network_type": {
              "key": "get_network:provider:network_type",
              "value": "rule:admin_only"
              }, 
            "neutron-create_trunk": {
              "key": "create_trunk",
              "value": "rule:regular_user and rule:deny_readonly"
              }, 
            "neutron-update_policy_bandwidth_limit_rule": {
              "key": "update_policy_bandwidth_limit_rule",
              "value": "rule:admin_only"
              }, 
            "neutron-get_network_ip_availability": {
              "key": "get_network_ip_availability",
              "value": "rule:admin_only"
              }, 
            "neutron-get_metering_label": {
              "key": "get_metering_label",
              "value": "rule:admin_only"
              }, 
            "neutron-update_agent": {
              "key": "update_agent",
              "value": "rule:admin_only"
              }, 
            "neutron-update_floatingip": {
              "key": "update_floatingip",
              "value": "rule:admin_or_owner and rule:deny_readonly"
              }, 
            "neutron-get_port:binding:profile": {
              "key": "get_port:binding:profile",
              "value": "rule:admin_only"
              }, 
            "neutron-create_network:provider:network_type": {
              "key": "create_network:provider:network_type",
              "value": "rule:admin_only"
              }, 
            "neutron-create_port:allowed_address_pairs": {
              "key": "create_port:allowed_address_pairs",
              "value": "rule:admin_or_network_owner and rule:deny_readonly"
              }, 
            "neutron-update_port": {
              "key": "update_port",
              "value": "rule:admin_or_owner or rule:context_is_advsvc"
              }, 
            "neutron-delete_dhcp-network": {
              "key": "delete_dhcp-network",
              "value": "rule:admin_only"
              }, 
            "neutron-create_policy": {
              "key": "create_policy",
              "value": "rule:admin_only"
              }, 
            "neutron-update_port:mac_learning_enabled": {
              "key": "update_port:mac_learning_enabled",
              "value": "rule:context_is_advsvc or rule:admin_or_network_owner"
              }, 
            "neutron-delete_segment": {
              "key": "delete_segment",
              "value": "rule:admin_only and rule:deny_readonly"
              }, 
            "neutron-default": {
              "key": "default",
              "value": "rule:admin_or_owner"
              }, 
            "neutron-create_qos_queue": {
              "key": "create_qos_queue",
              "value": "rule:admin_only"
              }, 
            "neutron-network_device": {
              "key": "network_device",
              "value": "field:port:device_owner=~^network:"
              }, 
            "neutron-delete_policy_minimum_bandwidth_rule": {
              "key": "delete_policy_minimum_bandwidth_rule",
              "value": "rule:admin_only"
              }, 
            "neutron-add_router_interface": {
              "key": "add_router_interface",
              "value": "rule:admin_or_owner and rule:deny_readonly"
              }, 
            "neutron-update_port:binding:profile": {
              "key": "update_port:binding:profile",
              "value": "rule:admin_only and rule:deny_readonly"
              }, 
            "neutron-create_port": {
              "key": "create_port",
              "value": "rule:deny_readonly"
              }, 
            "neutron-create_floatingip": {
              "key": "create_floatingip",
              "value": "rule:regular_user and rule:deny_readonly"
              }, 
            "neutron-get_network:segments": {
              "key": "get_network:segments",
              "value": "rule:admin_only"
              }, 
            "neutron-update_flavor": {
              "key": "update_flavor",
              "value": "rule:admin_only"
              }, 
            "neutron-update_port:fixed_ips": {
              "key": "update_port:fixed_ips",
              "value": "rule:context_is_advsvc or rule:admin_or_network_owner"
              }, 
            "neutron-get_port:queue_id": {
              "key": "get_port:queue_id",
              "value": "rule:admin_only"
              }, 
            "neutron-update_policy_profiles": {
              "key": "update_policy_profiles",
              "value": "rule:admin_only"
              }, 
            "neutron-get_network:queue_id": {
              "key": "get_network:queue_id",
              "value": "rule:admin_only"
              }, 
            "neutron-create_subnet:service_types": {
              "key": "create_subnet:service_types",
              "value": "rule:admin_only"
              }, 
            "neutron-get_l3-routers": {
              "key": "get_l3-routers",
              "value": "rule:admin_only"
              }, 
            "neutron-get_loadbalancer-pools": {
              "key": "get_loadbalancer-pools",
              "value": "rule:admin_only"
              }, 
            "neutron-update_rbac_policy": {
              "key": "update_rbac_policy",
              "value": "rule:admin_or_owner"
              }, 
            "neutron-create_port:binding:host_id": {
              "key": "create_port:binding:host_id",
              "value": "rule:admin_only"
              }, 
            "neutron-update_subnetpool": {
              "key": "update_subnetpool",
              "value": "rule:admin_or_owner and rule:deny_readonly"
              }, 
            "neutron-delete_router": {
              "key": "delete_router",
              "value": "rule:admin_or_owner and rule:deny_readonly"
              }, 
            "neutron-create_port:binding:profile": {
              "key": "create_port:binding:profile",
              "value": "rule:admin_only"
              }, 
            "neutron-create_subnetpool:shared": {
              "key": "create_subnetpool:shared",
              "value": "rule:admin_only"
              }, 
            "neutron-get_agent-loadbalancers": {
              "key": "get_agent-loadbalancers",
              "value": "rule:admin_only"
              }, 
            "neutron-delete_subnetpool": {
              "key": "delete_subnetpool",
              "value": "rule:admin_or_owner and rule:deny_readonly"
              }, 
            "neutron-update_port:mac_address": {
              "key": "update_port:mac_address",
              "value": "rule:admin_only or rule:context_is_advsvc"
              }, 
            "neutron-update_router:external_gateway_info:enable_snat": {
              "key": "update_router:external_gateway_info:enable_snat",
              "value": "rule:admin_only"
              }, 
            "neutron-delete_service_profile": {
              "key": "delete_service_profile",
              "value": "rule:admin_only"
              }, 
            "neutron-create_subnet:segment_id": {
              "key": "create_subnet:segment_id",
              "value": "rule:admin_only"
              }, 
            "neutron-create_service_profile": {
              "key": "create_service_profile",
              "value": "rule:admin_only"
              }, 
            "neutron-restrict_wildcard": {
              "key": "restrict_wildcard",
              "value": "(not field:rbac_policy:target_tenant=*) or rule:admin_only"
              }, 
            "neutron-admin_or_owner": {
              "key": "admin_or_owner",
              "value": "rule:context_is_admin or rule:owner"
              }
        }
        nova::policy::policies: { 
            "nova-os_compute_api:os-evacuate": {
              "key": "os_compute_api:os-evacuate",
              "value": "rule:admin_api"
              }, 
            "nova-os_compute_api:os-flavor-access:discoverable": {
              "key": "os_compute_api:os-flavor-access:discoverable",
              "value": "@"
              }, 
            "nova-os_compute_api:servers:create": {
              "key": "os_compute_api:servers:create",
              "value": "rule:admin_or_owner and rule:deny_readonly"
              }, 
            "nova-os_compute_api:os-extended-volumes": {
              "key": "os_compute_api:os-extended-volumes",
              "value": "rule:admin_or_owner"
              }, 
            "nova-os_compute_api:servers:create:forced_host": {
              "key": "os_compute_api:servers:create:forced_host",
              "value": "rule:admin_api and rule:deny_readonly"
              }, 
            "nova-os_compute_api:os-aggregates:remove_host": {
              "key": "os_compute_api:os-aggregates:remove_host",
              "value": "rule:admin_api and rule:deny_readonly"
              }, 
            "nova-context_is_advsvc": {
              "key": "context_is_advsvc",
              "value": "role:advsvc"
              }, 
            "nova-os_compute_api:os-volumes:discoverable": {
              "key": "os_compute_api:os-volumes:discoverable",
              "value": "@"
              }, 
            "nova-os_compute_api:os-baremetal-nodes:discoverable": {
              "key": "os_compute_api:os-baremetal-nodes:discoverable",
              "value": "@"
              }, 
            "nova-os_compute_api:os-console-output": {
              "key": "os_compute_api:os-console-output",
              "value": "rule:admin_or_owner"
              }, 
            "nova-os_compute_api:os-floating-ips": {
              "key": "os_compute_api:os-floating-ips",
              "value": "rule:admin_or_owner"
              }, 
            "nova-os_compute_api:os-aggregates:update": {
              "key": "os_compute_api:os-aggregates:update",
              "value": "rule:admin_api"
              }, 
            "nova-os_compute_api:server-metadata:show": {
              "key": "os_compute_api:server-metadata:show",
              "value": "rule:admin_or_owner"
              }, 
            "nova-os_compute_api:os-pci:pci_servers": {
              "key": "os_compute_api:os-pci:pci_servers",
              "value": "rule:admin_or_owner"
              }, 
            "nova-os_compute_api:servers:start": {
              "key": "os_compute_api:servers:start",
              "value": "rule:admin_or_owner and rule:deny_readonly"
              }, 
            "nova-os_compute_api:os-create-backup:discoverable": {
              "key": "os_compute_api:os-create-backup:discoverable",
              "value": "@"
              }, 
            "nova-os_compute_api:os-keypairs:create": {
              "key": "os_compute_api:os-keypairs:create",
              "value": "rule:admin_api or user_id:%(user_id)s"
              }, 
            "nova-os_compute_api:os-shelve:discoverable": {
              "key": "os_compute_api:os-shelve:discoverable",
              "value": "@"
              }, 
            "nova-os_compute_api:os-floating-ip-dns:discoverable": {
              "key": "os_compute_api:os-floating-ip-dns:discoverable",
              "value": "@"
              }, 
            "nova-os_compute_api:os-hosts:discoverable": {
              "key": "os_compute_api:os-hosts:discoverable",
              "value": "@"
              }, 
            "nova-os_compute_api:os-agents:discoverable": {
              "key": "os_compute_api:os-agents:discoverable",
              "value": "@"
              }, 
            "nova-os_compute_api:servers:create_image": {
              "key": "os_compute_api:servers:create_image",
              "value": "rule:admin_or_owner and rule:deny_readonly"
              }, 
            "nova-os_compute_api:ips:index": {
              "key": "os_compute_api:ips:index",
              "value": "rule:admin_or_owner"
              }, 
            "nova-os_compute_api:os-virtual-interfaces": {
              "key": "os_compute_api:os-virtual-interfaces",
              "value": "rule:admin_or_owner"
              }, 
            "nova-os_compute_api:os-consoles:discoverable": {
              "key": "os_compute_api:os-consoles:discoverable",
              "value": "@"
              }, 
            "nova-os_compute_api:os-consoles:create": {
              "key": "os_compute_api:os-consoles:create",
              "value": "rule:admin_or_owner and rule:deny_readonly"
              }, 
            "nova-os_compute_api:os-server-tags:delete_all": {
              "key": "os_compute_api:os-server-tags:delete_all",
              "value": "@"
              }, 
            "nova-os_compute_api:os-migrate-server:discoverable": {
              "key": "os_compute_api:os-migrate-server:discoverable",
              "value": "@"
              }, 
            "nova-os_compute_api:os-keypairs:delete": {
              "key": "os_compute_api:os-keypairs:delete",
              "value": "rule:admin_api or user_id:%(user_id)s"
              }, 
            "nova-os_compute_api:os-console-auth-tokens:discoverable": {
              "key": "os_compute_api:os-console-auth-tokens:discoverable",
              "value": "@"
              }, 
            "nova-os_compute_api:os-floating-ips-bulk": {
              "key": "os_compute_api:os-floating-ips-bulk",
              "value": "rule:admin_api"
              }, 
            "nova-admin_api": {
              "key": "admin_api",
              "value": "is_admin:True"
              }, 
            "nova-os_compute_api:os-simple-tenant-usage:list": {
              "key": "os_compute_api:os-simple-tenant-usage:list",
              "value": "rule:admin_api"
              }, 
            "nova-os_compute_api:os-quota-class-sets:show": {
              "key": "os_compute_api:os-quota-class-sets:show",
              "value": "is_admin:True or quota_class:%(quota_class)s"
              }, 
            "nova-os_compute_api:os-suspend-server:resume": {
              "key": "os_compute_api:os-suspend-server:resume",
              "value": "rule:admin_or_owner"
              }, 
            "nova-os_compute_api:os-tenant-networks": {
              "key": "os_compute_api:os-tenant-networks",
              "value": "rule:admin_or_owner"
              }, 
            "nova-os_compute_api:limits:discoverable": {
              "key": "os_compute_api:limits:discoverable",
              "value": "@"
              }, 
            "nova-os_compute_api:os-assisted-volume-snapshots:create": {
              "key": "os_compute_api:os-assisted-volume-snapshots:create",
              "value": "rule:admin_api"
              }, 
            "nova-os_compute_api:os-aggregates:index": {
              "key": "os_compute_api:os-aggregates:index",
              "value": "rule:admin_api"
              }, 
            "nova-os_compute_api:os-server-groups:discoverable": {
              "key": "os_compute_api:os-server-groups:discoverable",
              "value": "@"
              }, 
            "nova-os_compute_api:os-evacuate:discoverable": {
              "key": "os_compute_api:os-evacuate:discoverable",
              "value": "@"
              }, 
            "nova-os_compute_api:os-rescue:discoverable": {
              "key": "os_compute_api:os-rescue:discoverable",
              "value": "@"
              }, 
            "nova-os_compute_api:os-volumes-attachments:index": {
              "key": "os_compute_api:os-volumes-attachments:index",
              "value": "rule:admin_or_owner"
              }, 
            "nova-os_compute_api:os-server-password": {
              "key": "os_compute_api:os-server-password",
              "value": "rule:admin_or_owner"
              }, 
            "nova-os_compute_api:os-lock-server:discoverable": {
              "key": "os_compute_api:os-lock-server:discoverable",
              "value": "@"
              }, 
            "nova-os_compute_api:os-shelve:shelve_offload": {
              "key": "os_compute_api:os-shelve:shelve_offload",
              "value": "rule:admin_api"
              }, 
            "nova-context_is_admin": {
              "key": "context_is_admin",
              "value": "role:admin and rule:deny_readonly"
              }, 
            "nova-os_compute_api:os-aggregates:delete": {
              "key": "os_compute_api:os-aggregates:delete",
              "value": "rule:admin_api and rule:deny_readonly"
              }, 
            "nova-deny_readonly": {
              "key": "deny_readonly",
              "value": "not role:readonly"
              }, 
            "nova-os_compute_api:os-attach-interfaces:discoverable": {
              "key": "os_compute_api:os-attach-interfaces:discoverable",
              "value": "@"
              }, 
            "nova-os_compute_api:server-metadata:index": {
              "key": "os_compute_api:server-metadata:index",
              "value": "rule:admin_or_owner"
              }, 
            "nova-os_compute_api:os-server-groups": {
              "key": "os_compute_api:os-server-groups",
              "value": "rule:admin_or_owner"
              }, 
            "nova-os_compute_api:os-cells:discoverable": {
              "key": "os_compute_api:os-cells:discoverable",
              "value": "@"
              }, 
            "nova-os_compute_api:os-aggregates:set_metadata": {
              "key": "os_compute_api:os-aggregates:set_metadata",
              "value": "rule:admin_api and rule:deny_readonly"
              }, 
            "nova-os_compute_api:os-create-backup": {
              "key": "os_compute_api:os-create-backup",
              "value": "rule:admin_or_owner and rule:deny_readonly"
              }, 
            "nova-os_compute_api:os-security-group-default-rules:discoverable": {
              "key": "os_compute_api:os-security-group-default-rules:discoverable",
              "value": "@"
              }, 
            "nova-os_compute_api:os-deferred-delete:discoverable": {
              "key": "os_compute_api:os-deferred-delete:discoverable",
              "value": "@"
              }, 
            "nova-os_compute_api:server-metadata:delete": {
              "key": "os_compute_api:server-metadata:delete",
              "value": "rule:admin_or_owner and rule:deny_readonly"
              }, 
            "nova-os_compute_api:os-floating-ips:discoverable": {
              "key": "os_compute_api:os-floating-ips:discoverable",
              "value": "@"
              }, 
            "nova-os_compute_api:os-pause-server:pause": {
              "key": "os_compute_api:os-pause-server:pause",
              "value": "rule:admin_or_owner"
              }, 
            "nova-os_compute_api:os-certificates:discoverable": {
              "key": "os_compute_api:os-certificates:discoverable",
              "value": "@"
              }, 
            "nova-os_compute_api:images:discoverable": {
              "key": "os_compute_api:images:discoverable",
              "value": "@"
              }, 
            "nova-os_compute_api:os-hide-server-addresses:discoverable": {
              "key": "os_compute_api:os-hide-server-addresses:discoverable",
              "value": "@"
              }, 
            "nova-os_compute_api:os-rescue": {
              "key": "os_compute_api:os-rescue",
              "value": "rule:admin_or_owner"
              }, 
            "nova-os_compute_api:os-simple-tenant-usage:discoverable": {
              "key": "os_compute_api:os-simple-tenant-usage:discoverable",
              "value": "@"
              }, 
            "nova-os_compute_api:os-extended-server-attributes": {
              "key": "os_compute_api:os-extended-server-attributes",
              "value": "rule:admin_api"
              }, 
            "nova-os_compute_api:os-agents": {
              "key": "os_compute_api:os-agents",
              "value": "rule:admin_api"
              }, 
            "nova-os_compute_api:os-server-tags:delete": {
              "key": "os_compute_api:os-server-tags:delete",
              "value": "@"
              }, 
            "nova-os_compute_api:os-flavor-extra-specs:show": {
              "key": "os_compute_api:os-flavor-extra-specs:show",
              "value": "rule:admin_or_owner"
              }, 
            "nova-os_compute_api:os-attach-interfaces:delete": {
              "key": "os_compute_api:os-attach-interfaces:delete",
              "value": "rule:admin_or_owner and rule:deny_readonly"
              }, 
            "nova-os_compute_api:os-extended-availability-zone": {
              "key": "os_compute_api:os-extended-availability-zone",
              "value": "rule:admin_or_owner"
              }, 
            "nova-os_compute_api:os-cloudpipe:discoverable": {
              "key": "os_compute_api:os-cloudpipe:discoverable",
              "value": "@"
              }, 
            "nova-os_compute_api:os-instance-actions:events": {
              "key": "os_compute_api:os-instance-actions:events",
              "value": "rule:admin_api"
              }, 
            "nova-os_compute_api:os-scheduler-hints:discoverable": {
              "key": "os_compute_api:os-scheduler-hints:discoverable",
              "value": "@"
              }, 
            "nova-os_compute_api:os-fixed-ips": {
              "key": "os_compute_api:os-fixed-ips",
              "value": "rule:admin_api"
              }, 
            "nova-network:attach_external_network": {
              "key": "network:attach_external_network",
              "value": "is_admin:True"
              }, 
            "nova-os_compute_api:server-metadata:create": {
              "key": "os_compute_api:server-metadata:create",
              "value": "rule:admin_or_owner and rule:deny_readonly"
              }, 
            "nova-os_compute_api:os-admin-password:discoverable": {
              "key": "os_compute_api:os-admin-password:discoverable",
              "value": "@"
              }, 
            "nova-os_compute_api:os-shelve:shelve": {
              "key": "os_compute_api:os-shelve:shelve",
              "value": "rule:admin_or_owner"
              }, 
            "nova-os_compute_api:os-admin-actions:reset_network": {
              "key": "os_compute_api:os-admin-actions:reset_network",
              "value": "rule:admin_api and rule:deny_readonly"
              }, 
            "nova-os_compute_api:servers:resize": {
              "key": "os_compute_api:servers:resize",
              "value": "rule:admin_or_owner"
              }, 
            "nova-os_compute_api:os-aggregates:add_host": {
              "key": "os_compute_api:os-aggregates:add_host",
              "value": "rule:admin_api"
              }, 
            "nova-os_compute_api:os-fping": {
              "key": "os_compute_api:os-fping",
              "value": "rule:admin_or_owner"
              }, 
            "nova-os_compute_api:os-cells:update": {
              "key": "os_compute_api:os-cells:update",
              "value": "rule:admin_api"
              }, 
            "nova-os_compute_api:os-floating-ip-dns:domain:delete": {
              "key": "os_compute_api:os-floating-ip-dns:domain:delete",
              "value": "rule:admin_api and rule:deny_readonly"
              }, 
            "nova-os_compute_api:os-server-password:discoverable": {
              "key": "os_compute_api:os-server-password:discoverable",
              "value": "@"
              }, 
            "nova-os_compute_api:os-server-diagnostics": {
              "key": "os_compute_api:os-server-diagnostics",
              "value": "rule:admin_api"
              }, 
            "nova-os_compute_api:versions:discoverable": {
              "key": "os_compute_api:versions:discoverable",
              "value": "@"
              }, 
            "nova-os_compute_api:os-cells": {
              "key": "os_compute_api:os-cells",
              "value": "rule:admin_api"
              }, 
            "nova-os_compute_api:os-admin-actions:discoverable": {
              "key": "os_compute_api:os-admin-actions:discoverable",
              "value": "@"
              }, 
            "nova-os_compute_api:servers:detail:get_all_tenants": {
              "key": "os_compute_api:servers:detail:get_all_tenants",
              "value": "rule:admin_api"
              }, 
            "nova-os_compute_api:servers:update": {
              "key": "os_compute_api:servers:update",
              "value": "rule:admin_or_owner"
              }, 
            "nova-os_compute_api:os-lock-server:unlock": {
              "key": "os_compute_api:os-lock-server:unlock",
              "value": "rule:admin_or_owner"
              }, 
            "nova-os_compute_api:server-metadata:discoverable": {
              "key": "os_compute_api:server-metadata:discoverable",
              "value": "@"
              }, 
            "nova-os_compute_api:image-size:discoverable": {
              "key": "os_compute_api:image-size:discoverable",
              "value": "@"
              }, 
            "nova-os_compute_api:os-certificates:show": {
              "key": "os_compute_api:os-certificates:show",
              "value": "rule:admin_or_owner"
              }, 
            "nova-os_compute_api:os-config-drive": {
              "key": "os_compute_api:os-config-drive",
              "value": "rule:admin_or_owner"
              }, 
            "nova-regular_user": {
              "key": "regular_user",
              "value": "rule:deny_readonly"
              }, 
            "nova-os_compute_api:os-migrations:index": {
              "key": "os_compute_api:os-migrations:index",
              "value": "rule:admin_api"
              }, 
            "nova-os_compute_api:os-attach-interfaces:create": {
              "key": "os_compute_api:os-attach-interfaces:create",
              "value": "rule:admin_or_owner and rule:deny_readonly"
              }, 
            "nova-os_compute_api:os-volumes-attachments:create": {
              "key": "os_compute_api:os-volumes-attachments:create",
              "value": "rule:admin_or_owner and rule:deny_readonly"
              }, 
            "nova-os_compute_api:os-consoles:index": {
              "key": "os_compute_api:os-consoles:index",
              "value": "rule:admin_or_owner"
              }, 
            "nova-os_compute_api:os-quota-class-sets:discoverable": {
              "key": "os_compute_api:os-quota-class-sets:discoverable",
              "value": "@"
              }, 
            "nova-admin_or_network_owner": {
              "key": "admin_or_network_owner",
              "value": "rule:context_is_admin or tenant_id:%(network:tenant_id)s or role:network_admin"
              }, 
            "nova-os_compute_api:os-used-limits": {
              "key": "os_compute_api:os-used-limits",
              "value": "rule:admin_api"
              }, 
            "nova-os_compute_api:os-instance-usage-audit-log": {
              "key": "os_compute_api:os-instance-usage-audit-log",
              "value": "rule:admin_api"
              }, 
            "nova-os_compute_api:os-volumes-attachments:show": {
              "key": "os_compute_api:os-volumes-attachments:show",
              "value": "rule:admin_or_owner"
              }, 
            "nova-os_compute_api:os-block-device-mapping-v1:discoverable": {
              "key": "os_compute_api:os-block-device-mapping-v1:discoverable",
              "value": "@"
              }, 
            "nova-os_compute_api:os-admin-actions:reset_state": {
              "key": "os_compute_api:os-admin-actions:reset_state",
              "value": "rule:admin_api and rule:deny_readonly"
              }, 
            "nova-os_compute_api:os-flavor-rxtx": {
              "key": "os_compute_api:os-flavor-rxtx",
              "value": "rule:admin_or_owner"
              }, 
            "nova-os_compute_api:servers:show": {
              "key": "os_compute_api:servers:show",
              "value": "rule:admin_or_owner"
              }, 
            "nova-os_compute_api:os-fping:all_tenants": {
              "key": "os_compute_api:os-fping:all_tenants",
              "value": "rule:admin_api"
              }, 
            "nova-os_compute_api:os-server-diagnostics:discoverable": {
              "key": "os_compute_api:os-server-diagnostics:discoverable",
              "value": "@"
              }, 
            "nova-os_compute_api:os-flavor-extra-specs:create": {
              "key": "os_compute_api:os-flavor-extra-specs:create",
              "value": "rule:admin_api and rule:deny_readonly"
              }, 
            "nova-os_compute_api:os-flavor-manage:discoverable": {
              "key": "os_compute_api:os-flavor-manage:discoverable",
              "value": "@"
              }, 
            "nova-os_compute_api:os-server-tags:index": {
              "key": "os_compute_api:os-server-tags:index",
              "value": "@"
              }, 
            "nova-os_compute_api:servers:confirm_resize": {
              "key": "os_compute_api:servers:confirm_resize",
              "value": "rule:admin_or_owner"
              }, 
            "nova-os_compute_api:os-flavor-extra-specs:index": {
              "key": "os_compute_api:os-flavor-extra-specs:index",
              "value": "rule:admin_or_owner"
              }, 
            "nova-os_compute_api:os-networks:discoverable": {
              "key": "os_compute_api:os-networks:discoverable",
              "value": "@"
              }, 
            "nova-os_compute_api:os-tenant-networks:discoverable": {
              "key": "os_compute_api:os-tenant-networks:discoverable",
              "value": "@"
              }, 
            "nova-os_compute_api:os-aggregates:discoverable": {
              "key": "os_compute_api:os-aggregates:discoverable",
              "value": "@"
              }, 
            "nova-os_compute_api:os-extended-status": {
              "key": "os_compute_api:os-extended-status",
              "value": "rule:admin_or_owner"
              }, 
            "nova-os_compute_api:os-volumes-attachments:discoverable": {
              "key": "os_compute_api:os-volumes-attachments:discoverable",
              "value": "@"
              }, 
            "nova-os_compute_api:os-assisted-volume-snapshots:delete": {
              "key": "os_compute_api:os-assisted-volume-snapshots:delete",
              "value": "rule:admin_api and rule:deny_readonly"
              }, 
            "nova-os_compute_api:os-user-data:discoverable": {
              "key": "os_compute_api:os-user-data:discoverable",
              "value": "@"
              }, 
            "nova-os_compute_api:os-security-groups:discoverable": {
              "key": "os_compute_api:os-security-groups:discoverable",
              "value": "@"
              }, 
            "nova-admin_owner_or_network_owner": {
              "key": "admin_owner_or_network_owner",
              "value": "rule:owner or rule:admin_or_network_owner"
              }, 
            "nova-os_compute_api:os-floating-ips-bulk:discoverable": {
              "key": "os_compute_api:os-floating-ips-bulk:discoverable",
              "value": "@"
              }, 
            "nova-os_compute_api:os-flavor-extra-specs:discoverable": {
              "key": "os_compute_api:os-flavor-extra-specs:discoverable",
              "value": "@"
              }, 
            "nova-os_compute_api:servers:stop": {
              "key": "os_compute_api:servers:stop",
              "value": "rule:admin_or_owner and rule:deny_readonly"
              }, 
            "nova-os_compute_api:os-hypervisors": {
              "key": "os_compute_api:os-hypervisors",
              "value": "rule:admin_api"
              }, 
            "nova-os_compute_api:os-consoles:show": {
              "key": "os_compute_api:os-consoles:show",
              "value": "rule:admin_or_owner"
              }, 
            "nova-os_compute_api:servers:migrations:show": {
              "key": "os_compute_api:servers:migrations:show",
              "value": "rule:admin_api"
              }, 
            "nova-os_compute_api:os-admin-actions:inject_network_info": {
              "key": "os_compute_api:os-admin-actions:inject_network_info",
              "value": "rule:admin_api"
              }, 
            "nova-os_compute_api:servers:create:attach_volume": {
              "key": "os_compute_api:servers:create:attach_volume",
              "value": "rule:admin_or_owner and rule:deny_readonly"
              }, 
            "nova-os_compute_api:os-virtual-interfaces:discoverable": {
              "key": "os_compute_api:os-virtual-interfaces:discoverable",
              "value": "@"
              }, 
            "nova-os_compute_api:os-flavor-access:add_tenant_access": {
              "key": "os_compute_api:os-flavor-access:add_tenant_access",
              "value": "rule:admin_api"
              }, 
            "nova-os_compute_api:os-keypairs:show": {
              "key": "os_compute_api:os-keypairs:show",
              "value": "rule:admin_api or user_id:%(user_id)s"
              }, 
            "nova-os_compute_api:os-server-tags:update": {
              "key": "os_compute_api:os-server-tags:update",
              "value": "@"
              }, 
            "nova-os_compute_api:image-metadata:discoverable": {
              "key": "os_compute_api:image-metadata:discoverable",
              "value": "@"
              }, 
            "nova-owner": {
              "key": "owner",
              "value": "tenant_id:%(tenant_id)s and rule:deny_readonly"
              }, 
            "nova-os_compute_api:os-quota-class-sets:update": {
              "key": "os_compute_api:os-quota-class-sets:update",
              "value": "rule:admin_api"
              }, 
            "nova-os_compute_api:image-size": {
              "key": "os_compute_api:image-size",
              "value": "rule:admin_or_owner"
              }, 
            "nova-os_compute_api:os-migrate-server:migrate": {
              "key": "os_compute_api:os-migrate-server:migrate",
              "value": "rule:admin_api and rule:deny_readonly"
              }, 
            "nova-os_compute_api:extensions": {
              "key": "os_compute_api:extensions",
              "value": "rule:admin_or_owner"
              }, 
            "nova-os_compute_api:os-remote-consoles:discoverable": {
              "key": "os_compute_api:os-remote-consoles:discoverable",
              "value": "@"
              }, 
            "nova-os_compute_api:os-flavor-access:remove_tenant_access": {
              "key": "os_compute_api:os-flavor-access:remove_tenant_access",
              "value": "rule:admin_api and rule:deny_readonly"
              }, 
            "nova-os_compute_api:os-simple-tenant-usage:show": {
              "key": "os_compute_api:os-simple-tenant-usage:show",
              "value": "rule:admin_or_owner"
              }, 
            "nova-os_compute_api:servers:revert_resize": {
              "key": "os_compute_api:servers:revert_resize",
              "value": "rule:admin_or_owner"
              }, 
            "nova-os_compute_api:os-keypairs:index": {
              "key": "os_compute_api:os-keypairs:index",
              "value": "rule:admin_api or user_id:%(user_id)s"
              }, 
            "nova-os_compute_api:servers:index:get_all_tenants": {
              "key": "os_compute_api:servers:index:get_all_tenants",
              "value": "rule:admin_api"
              }, 
            "nova-os_compute_api:os-fping:discoverable": {
              "key": "os_compute_api:os-fping:discoverable",
              "value": "@"
              }, 
            "nova-os_compute_api:os-keypairs:discoverable": {
              "key": "os_compute_api:os-keypairs:discoverable",
              "value": "@"
              }, 
            "nova-os_compute_api:os-quota-sets:show": {
              "key": "os_compute_api:os-quota-sets:show",
              "value": "rule:admin_or_owner"
              }, 
            "nova-os_compute_api:os-extended-status:discoverable": {
              "key": "os_compute_api:os-extended-status:discoverable",
              "value": "@"
              }, 
            "nova-os_compute_api:servers:discoverable": {
              "key": "os_compute_api:servers:discoverable",
              "value": "@"
              }, 
            "nova-os_compute_api:os-config-drive:discoverable": {
              "key": "os_compute_api:os-config-drive:discoverable",
              "value": "@"
              }, 
            "nova-os_compute_api:os-pci:index": {
              "key": "os_compute_api:os-pci:index",
              "value": "rule:admin_api"
              }, 
            "nova-os_compute_api:os-deferred-delete": {
              "key": "os_compute_api:os-deferred-delete",
              "value": "rule:admin_or_owner and rule:deny_readonly"
              }, 
            "nova-os_compute_api:ips:discoverable": {
              "key": "os_compute_api:ips:discoverable",
              "value": "@"
              }, 
            "nova-os_compute_api:os-hide-server-addresses": {
              "key": "os_compute_api:os-hide-server-addresses",
              "value": "is_admin:False"
              }, 
            "nova-os_compute_api:os-flavor-extra-specs:update": {
              "key": "os_compute_api:os-flavor-extra-specs:update",
              "value": "rule:admin_api"
              }, 
            "nova-os_compute_api:os-pause-server:unpause": {
              "key": "os_compute_api:os-pause-server:unpause",
              "value": "rule:admin_or_owner"
              }, 
            "nova-admin_only": {
              "key": "admin_only",
              "value": "rule:context_is_admin and rule:deny_readonly"
              }, 
            "nova-os_compute_api:os-availability-zone:list": {
              "key": "os_compute_api:os-availability-zone:list",
              "value": "rule:admin_or_owner"
              }, 
            "nova-os_compute_api:os-pause-server:discoverable": {
              "key": "os_compute_api:os-pause-server:discoverable",
              "value": "@"
              }, 
            "nova-os_compute_api:servers:detail": {
              "key": "os_compute_api:servers:detail",
              "value": "rule:admin_or_owner"
              }, 
            "nova-os_compute_api:os-admin-actions": {
              "key": "os_compute_api:os-admin-actions",
              "value": "rule:admin_api"
              }, 
            "nova-os_compute_api:extension_info:discoverable": {
              "key": "os_compute_api:extension_info:discoverable",
              "value": "@"
              }, 
            "nova-os_compute_api:os-pci:detail": {
              "key": "os_compute_api:os-pci:detail",
              "value": "rule:admin_api"
              }, 
            "nova-os_compute_api:servers:rebuild": {
              "key": "os_compute_api:servers:rebuild",
              "value": "rule:admin_or_owner"
              }, 
            "nova-os_compute_api:os-used-limits:discoverable": {
              "key": "os_compute_api:os-used-limits:discoverable",
              "value": "@"
              }, 
            "nova-os_compute_api:os-floating-ip-dns:domain:update": {
              "key": "os_compute_api:os-floating-ip-dns:domain:update",
              "value": "rule:admin_api"
              }, 
            "nova-admin_or_owner": {
              "key": "admin_or_owner",
              "value": "is_admin:True or project_id:%(project_id)s"
              }, 
            "nova-os_compute_api:os-quota-sets:delete": {
              "key": "os_compute_api:os-quota-sets:delete",
              "value": "rule:admin_api and rule:deny_readonly"
              }, 
            "nova-os_compute_api:os-server-external-events:create": {
              "key": "os_compute_api:os-server-external-events:create",
              "value": "rule:admin_api"
              }, 
            "nova-os_compute_api:os-multiple-create:discoverable": {
              "key": "os_compute_api:os-multiple-create:discoverable",
              "value": "@ and rule:deny_readonly"
              }, 
            "nova-os_compute_api:servers:trigger_crash_dump": {
              "key": "os_compute_api:servers:trigger_crash_dump",
              "value": "rule:admin_or_owner"
              }, 
            "nova-os_compute_api:os-availability-zone:detail": {
              "key": "os_compute_api:os-availability-zone:detail",
              "value": "rule:admin_api"
              }, 
            "nova-os_compute_api:flavors:discoverable": {
              "key": "os_compute_api:flavors:discoverable",
              "value": "@"
              }, 
            "nova-cells_scheduler_filter:TargetCellFilter": {
              "key": "cells_scheduler_filter:TargetCellFilter",
              "value": "is_admin:True"
              }, 
            "nova-os_compute_api:os-multinic:discoverable": {
              "key": "os_compute_api:os-multinic:discoverable",
              "value": "@"
              }, 
            "nova-os_compute_api:os-server-usage:discoverable": {
              "key": "os_compute_api:os-server-usage:discoverable",
              "value": "@"
              }, 
            "nova-os_compute_api:os-keypairs": {
              "key": "os_compute_api:os-keypairs",
              "value": "rule:admin_or_owner"
              }, 
            "nova-os_compute_api:os-flavor-manage": {
              "key": "os_compute_api:os-flavor-manage",
              "value": "rule:admin_api"
              }, 
            "nova-os_compute_api:os-cloudpipe": {
              "key": "os_compute_api:os-cloudpipe",
              "value": "rule:admin_api"
              }, 
            "nova-os_compute_api:os-certificates:create": {
              "key": "os_compute_api:os-certificates:create",
              "value": "rule:admin_or_owner and rule:deny_readonly"
              }, 
            "nova-os_compute_api:os-aggregates:show": {
              "key": "os_compute_api:os-aggregates:show",
              "value": "rule:admin_api"
              }, 
            "nova-os_compute_api:os-cells:sync_instances": {
              "key": "os_compute_api:os-cells:sync_instances",
              "value": "rule:admin_api"
              }, 
            "nova-os_compute_api:os-instance-actions:discoverable": {
              "key": "os_compute_api:os-instance-actions:discoverable",
              "value": "@"
              }, 
            "nova-os_compute_api:os-server-usage": {
              "key": "os_compute_api:os-server-usage",
              "value": "rule:admin_or_owner"
              }, 
            "nova-os_compute_api:os-services": {
              "key": "os_compute_api:os-services",
              "value": "rule:admin_api"
              }, 
            "nova-os_compute_api:servers:migrations:force_complete": {
              "key": "os_compute_api:servers:migrations:force_complete",
              "value": "rule:admin_api and rule:deny_readonly"
              }, 
            "nova-os_compute_api:os-services:discoverable": {
              "key": "os_compute_api:os-services:discoverable",
              "value": "@"
              }, 
            "nova-os_compute_api:os-networks-associate:discoverable": {
              "key": "os_compute_api:os-networks-associate:discoverable",
              "value": "@"
              }, 
            "nova-os_compute_api:extensions:discoverable": {
              "key": "os_compute_api:extensions:discoverable",
              "value": "@"
              }, 
            "nova-os_compute_api:servers:index": {
              "key": "os_compute_api:servers:index",
              "value": "rule:admin_or_owner"
              }, 
            "nova-os_compute_api:os-security-groups": {
              "key": "os_compute_api:os-security-groups",
              "value": "rule:admin_or_owner"
              }, 
            "nova-os_compute_api:os-volumes-attachments:update": {
              "key": "os_compute_api:os-volumes-attachments:update",
              "value": "rule:admin_api"
              }, 
            "nova-os_compute_api:os-flavor-rxtx:discoverable": {
              "key": "os_compute_api:os-flavor-rxtx:discoverable",
              "value": "@"
              }, 
            "nova-os_compute_api:os-lock-server:lock": {
              "key": "os_compute_api:os-lock-server:lock",
              "value": "rule:admin_or_owner"
              }, 
            "nova-os_compute_api:os-suspend-server:suspend": {
              "key": "os_compute_api:os-suspend-server:suspend",
              "value": "rule:admin_or_owner"
              }, 
            "nova-os_compute_api:server-migrations:discoverable": {
              "key": "os_compute_api:server-migrations:discoverable",
              "value": "@"
              }, 
            "nova-os_compute_api:os-server-tags:update_all": {
              "key": "os_compute_api:os-server-tags:update_all",
              "value": "@"
              }, 
            "nova-os_compute_api:os-block-device-mapping:discoverable": {
              "key": "os_compute_api:os-block-device-mapping:discoverable",
              "value": "@"
              }, 
            "nova-os_compute_api:os-networks:view": {
              "key": "os_compute_api:os-networks:view",
              "value": "rule:admin_or_owner"
              }, 
            "nova-os_compute_api:os-floating-ip-dns": {
              "key": "os_compute_api:os-floating-ip-dns",
              "value": "rule:admin_or_owner"
              }, 
            "nova-os_compute_api:os-quota-sets:update": {
              "key": "os_compute_api:os-quota-sets:update",
              "value": "rule:admin_api and rule:deny_readonly"
              }, 
            "nova-os_compute_api:os-floating-ip-pools:discoverable": {
              "key": "os_compute_api:os-floating-ip-pools:discoverable",
              "value": "@"
              }, 
            "nova-os_compute_api:os-assisted-volume-snapshots:discoverable": {
              "key": "os_compute_api:os-assisted-volume-snapshots:discoverable",
              "value": "@"
              }, 
            "nova-os_compute_api:os-extended-volumes:discoverable": {
              "key": "os_compute_api:os-extended-volumes:discoverable",
              "value": "@"
              }, 
            "nova-os_compute_api:os-volumes": {
              "key": "os_compute_api:os-volumes",
              "value": "rule:admin_or_owner"
              }, 
            "nova-os_compute_api:os-floating-ip-pools": {
              "key": "os_compute_api:os-floating-ip-pools",
              "value": "rule:admin_or_owner"
              }, 
            "nova-os_compute_api:os-server-tags:discoverable": {
              "key": "os_compute_api:os-server-tags:discoverable",
              "value": "@"
              }, 
            "nova-os_compute_api:os-admin-password": {
              "key": "os_compute_api:os-admin-password",
              "value": "rule:admin_or_owner"
              }, 
            "nova-os_compute_api:os-baremetal-nodes": {
              "key": "os_compute_api:os-baremetal-nodes",
              "value": "rule:admin_api"
              }, 
            "nova-os_compute_api:os-console-output:discoverable": {
              "key": "os_compute_api:os-console-output:discoverable",
              "value": "@"
              }, 
            "nova-os_compute_api:servers:show:host_status": {
              "key": "os_compute_api:servers:show:host_status",
              "value": "rule:admin_api"
              }, 
            "nova-os_compute_api:os-consoles:delete": {
              "key": "os_compute_api:os-consoles:delete",
              "value": "rule:admin_or_owner and rule:deny_readonly"
              }, 
            "nova-os_compute_api:os-flavor-extra-specs:delete": {
              "key": "os_compute_api:os-flavor-extra-specs:delete",
              "value": "rule:admin_api"
              }, 
            "nova-os_compute_api:os-migrations:discoverable": {
              "key": "os_compute_api:os-migrations:discoverable",
              "value": "@"
              }, 
            "nova-os_compute_api:os-aggregates:create": {
              "key": "os_compute_api:os-aggregates:create",
              "value": "rule:admin_api and rule:deny_readonly"
              }, 
            "nova-os_compute_api:os-instance-usage-audit-log:discoverable": {
              "key": "os_compute_api:os-instance-usage-audit-log:discoverable",
              "value": "@"
              }, 
            "nova-os_compute_api:os-quota-sets:detail": {
              "key": "os_compute_api:os-quota-sets:detail",
              "value": "rule:admin_api"
              }, 
            "nova-os_compute_api:os-lock-server:unlock:unlock_override": {
              "key": "os_compute_api:os-lock-server:unlock:unlock_override",
              "value": "rule:admin_api and rule:deny_readonly"
              }, 
            "nova-os_compute_api:servers:create_image:allow_volume_backed": {
              "key": "os_compute_api:servers:create_image:allow_volume_backed",
              "value": "rule:admin_or_owner and rule:deny_readonly"
              }, 
            "nova-os_compute_api:flavors": {
              "key": "os_compute_api:flavors",
              "value": "rule:admin_or_owner"
              }, 
            "nova-os_compute_api:os-networks": {
              "key": "os_compute_api:os-networks",
              "value": "rule:admin_api"
              }, 
            "nova-os_compute_api:os-pci:discoverable": {
              "key": "os_compute_api:os-pci:discoverable",
              "value": "@"
              }, 
            "nova-os_compute_api:os-server-tags:show": {
              "key": "os_compute_api:os-server-tags:show",
              "value": "@"
              }, 
            "nova-os_compute_api:os-fixed-ips:discoverable": {
              "key": "os_compute_api:os-fixed-ips:discoverable",
              "value": "@"
              }, 
            "nova-os_compute_api:os-pci:show": {
              "key": "os_compute_api:os-pci:show",
              "value": "rule:admin_api"
              }, 
            "nova-os_compute_api:os-cells:delete": {
              "key": "os_compute_api:os-cells:delete",
              "value": "rule:admin_api and rule:deny_readonly"
              }, 
            "nova-os_compute_api:os-instance-actions": {
              "key": "os_compute_api:os-instance-actions",
              "value": "rule:admin_or_owner"
              }, 
            "nova-os_compute_api:server-metadata:update_all": {
              "key": "os_compute_api:server-metadata:update_all",
              "value": "rule:admin_or_owner"
              }, 
            "nova-os_compute_api:os-security-group-default-rules": {
              "key": "os_compute_api:os-security-group-default-rules",
              "value": "rule:admin_api"
              }, 
            "nova-os_compute_api:servers:reboot": {
              "key": "os_compute_api:servers:reboot",
              "value": "rule:admin_or_owner"
              }, 
            "nova-os_compute_api:os-networks-associate": {
              "key": "os_compute_api:os-networks-associate",
              "value": "rule:admin_api and rule:deny_readonly"
              }, 
            "nova-cells_scheduler_filter:DifferentCellFilter": {
              "key": "cells_scheduler_filter:DifferentCellFilter",
              "value": "is_admin:True"
              }, 
            "nova-os_compute_api:servers:migrations:index": {
              "key": "os_compute_api:servers:migrations:index",
              "value": "rule:admin_api"
              }, 
            "nova-os_compute_api:os-availability-zone:discoverable": {
              "key": "os_compute_api:os-availability-zone:discoverable",
              "value": "@"
              }, 
            "nova-os_compute_api:os-extended-server-attributes:discoverable": {
              "key": "os_compute_api:os-extended-server-attributes:discoverable",
              "value": "@"
              }, 
            "nova-os_compute_api:os-quota-sets:defaults": {
              "key": "os_compute_api:os-quota-sets:defaults",
              "value": "@"
              }, 
            "nova-os_compute_api:os-flavor-access": {
              "key": "os_compute_api:os-flavor-access",
              "value": "rule:admin_or_owner"
              }, 
            "nova-os_compute_api:os-remote-consoles": {
              "key": "os_compute_api:os-remote-consoles",
              "value": "rule:admin_or_owner and rule:deny_readonly"
              }, 
            "nova-os_compute_api:os-suspend-server:discoverable": {
              "key": "os_compute_api:os-suspend-server:discoverable",
              "value": "@"
              }, 
            "nova-os_compute_api:servers:delete": {
              "key": "os_compute_api:servers:delete",
              "value": "rule:admin_or_owner and rule:deny_readonly"
              }, 
            "nova-os_compute_api:os-migrate-server:migrate_live": {
              "key": "os_compute_api:os-migrate-server:migrate_live",
              "value": "rule:admin_api and rule:deny_readonly"
              }, 
            "nova-os_compute_api:servers:create:attach_network": {
              "key": "os_compute_api:servers:create:attach_network",
              "value": "rule:admin_or_owner and rule:deny_readonly"
              }, 
            "nova-os_compute_api:os-console-auth-tokens": {
              "key": "os_compute_api:os-console-auth-tokens",
              "value": "rule:admin_api"
              }, 
            "nova-os_compute_api:ips:show": {
              "key": "os_compute_api:ips:show",
              "value": "rule:admin_or_owner"
              }, 
            "nova-os_compute_api:os-hypervisors:discoverable": {
              "key": "os_compute_api:os-hypervisors:discoverable",
              "value": "@"
              }, 
            "nova-os_compute_api:os-server-external-events:discoverable": {
              "key": "os_compute_api:os-server-external-events:discoverable",
              "value": "@"
              }, 
            "nova-os_compute_api:os-attach-interfaces": {
              "key": "os_compute_api:os-attach-interfaces",
              "value": "rule:admin_or_owner"
              }, 
            "nova-os_compute_api:os-hosts": {
              "key": "os_compute_api:os-hosts",
              "value": "rule:admin_api"
              }, 
            "nova-os_compute_api:servers:migrations:delete": {
              "key": "os_compute_api:servers:migrations:delete",
              "value": "rule:admin_api and rule:deny_readonly"
              }, 
            "nova-os_compute_api:os-multinic": {
              "key": "os_compute_api:os-multinic",
              "value": "rule:admin_or_owner"
              }, 
            "nova-os_compute_api:os-extended-availability-zone:discoverable": {
              "key": "os_compute_api:os-extended-availability-zone:discoverable",
              "value": "@"
              }, 
            "nova-os_compute_api:os-shelve:unshelve": {
              "key": "os_compute_api:os-shelve:unshelve",
              "value": "rule:admin_or_owner"
              }, 
            "nova-os_compute_api:limits": {
              "key": "os_compute_api:limits",
              "value": "rule:admin_or_owner"
              }, 
            "nova-os_compute_api:server-metadata:update": {
              "key": "os_compute_api:server-metadata:update",
              "value": "rule:admin_or_owner and rule:deny_readonly"
              }, 
            "nova-os_compute_api:os-volumes-attachments:delete": {
              "key": "os_compute_api:os-volumes-attachments:delete",
              "value": "rule:admin_or_owner and rule:deny_readonly"
              }, 
            "nova-os_compute_api:os-quota-sets:discoverable": {
              "key": "os_compute_api:os-quota-sets:discoverable",
              "value": "@"
              }, 
            "nova-os_compute_api:os-cells:create": {
              "key": "os_compute_api:os-cells:create",
              "value": "rule:admin_api and rule:deny_readonly"
              }
        }
        sahara::policy::policies: { 
            "sahara-data-processing:jobs:get_all": {
              "key": "data-processing:jobs:get_all",
              "value": ""
              }, 
            "sahara-data-processing:images:add_tags": {
              "key": "data-processing:images:add_tags",
              "value": "rule:deny_readonly"
              }, 
            "sahara-data-processing:images:register": {
              "key": "data-processing:images:register",
              "value": "rule:deny_readonly"
              }, 
            "sahara-data-processing:plugins:patch": {
              "key": "data-processing:plugins:patch",
              "value": "role:admin"
              }, 
            "sahara-data-processing:job-binaries:create": {
              "key": "data-processing:job-binaries:create",
              "value": "rule:deny_readonly"
              }, 
            "sahara-data-processing:node-group-templates:modify": {
              "key": "data-processing:node-group-templates:modify",
              "value": "rule:deny_readonly"
              }, 
            "sahara-data-processing:job-executions:modify": {
              "key": "data-processing:job-executions:modify",
              "value": "rule:deny_readonly"
              }, 
            "sahara-data-processing:job-types:get_all": {
              "key": "data-processing:job-types:get_all",
              "value": ""
              }, 
            "sahara-data-processing:plugins:get": {
              "key": "data-processing:plugins:get",
              "value": ""
              }, 
            "sahara-data-processing:cluster-templates:create": {
              "key": "data-processing:cluster-templates:create",
              "value": "rule:deny_readonly"
              }, 
            "sahara-data-processing:job-binaries:delete": {
              "key": "data-processing:job-binaries:delete",
              "value": "rule:deny_readonly"
              }, 
            "sahara-data-processing:plugins:get_version": {
              "key": "data-processing:plugins:get_version",
              "value": ""
              }, 
            "sahara-data-processing:cluster-templates:get_all": {
              "key": "data-processing:cluster-templates:get_all",
              "value": ""
              }, 
            "sahara-data-processing:clusters:modify": {
              "key": "data-processing:clusters:modify",
              "value": "rule:deny_readonly"
              }, 
            "sahara-data-processing:data-sources:delete": {
              "key": "data-processing:data-sources:delete",
              "value": "rule:deny_readonly"
              }, 
            "sahara-data-processing:job-binary-internals:get_all": {
              "key": "data-processing:job-binary-internals:get_all",
              "value": ""
              }, 
            "sahara-data-processing:job-executions:delete": {
              "key": "data-processing:job-executions:delete",
              "value": "rule:deny_readonly"
              }, 
            "sahara-data-processing:job-binary-internals:create": {
              "key": "data-processing:job-binary-internals:create",
              "value": "rule:deny_readonly"
              }, 
            "sahara-data-processing:jobs:delete": {
              "key": "data-processing:jobs:delete",
              "value": "rule:deny_readonly"
              }, 
            "sahara-data-processing:job-executions:cancel": {
              "key": "data-processing:job-executions:cancel",
              "value": "rule:deny_readonly"
              }, 
            "sahara-data-processing:job-binaries:modify": {
              "key": "data-processing:job-binaries:modify",
              "value": "rule:deny_readonly"
              }, 
            "sahara-data-processing:job-binaries:get_all": {
              "key": "data-processing:job-binaries:get_all",
              "value": ""
              }, 
            "sahara-data-processing:clusters:create": {
              "key": "data-processing:clusters:create",
              "value": "rule:deny_readonly"
              }, 
            "sahara-data-processing:node-group-templates:delete": {
              "key": "data-processing:node-group-templates:delete",
              "value": "rule:deny_readonly"
              }, 
            "sahara-data-processing:clusters:scale": {
              "key": "data-processing:clusters:scale",
              "value": "rule:deny_readonly"
              }, 
            "sahara-data-processing:job-executions:refresh_status": {
              "key": "data-processing:job-executions:refresh_status",
              "value": ""
              }, 
            "sahara-data-processing:plugins:get_all": {
              "key": "data-processing:plugins:get_all",
              "value": ""
              }, 
            "sahara-data-processing:job-binary-internals:get": {
              "key": "data-processing:job-binary-internals:get",
              "value": ""
              }, 
            "sahara-data-processing:jobs:get": {
              "key": "data-processing:jobs:get",
              "value": ""
              }, 
            "sahara-data-processing:job-binary-internals:delete": {
              "key": "data-processing:job-binary-internals:delete",
              "value": "rule:deny_readonly"
              }, 
            "sahara-data-processing:job-executions:get": {
              "key": "data-processing:job-executions:get",
              "value": ""
              }, 
            "sahara-data-processing:clusters:delete": {
              "key": "data-processing:clusters:delete",
              "value": "rule:deny_readonly"
              }, 
            "sahara-data-processing:jobs:get_config_hints": {
              "key": "data-processing:jobs:get_config_hints",
              "value": ""
              }, 
            "sahara-data-processing:images:get_all": {
              "key": "data-processing:images:get_all",
              "value": ""
              }, 
            "sahara-data-processing:images:get": {
              "key": "data-processing:images:get",
              "value": ""
              }, 
            "sahara-data-processing:job-binaries:get": {
              "key": "data-processing:job-binaries:get",
              "value": ""
              }, 
            "sahara-data-processing:job-binary-internals:get_data": {
              "key": "data-processing:job-binary-internals:get_data",
              "value": ""
              }, 
            "sahara-data-processing:node-group-templates:get": {
              "key": "data-processing:node-group-templates:get",
              "value": ""
              }, 
            "sahara-data-processing:clusters:get_all": {
              "key": "data-processing:clusters:get_all",
              "value": ""
              }, 
            "sahara-data-processing:data-sources:modify": {
              "key": "data-processing:data-sources:modify",
              "value": "rule:deny_readonly"
              }, 
            "sahara-data-processing:images:unregister": {
              "key": "data-processing:images:unregister",
              "value": "rule:deny_readonly"
              }, 
            "sahara-data-processing:cluster-templates:modify": {
              "key": "data-processing:cluster-templates:modify",
              "value": "rule:deny_readonly"
              }, 
            "sahara-data-processing:data-sources:register": {
              "key": "data-processing:data-sources:register",
              "value": "rule:deny_readonly"
              }, 
            "sahara-context_is_admin": {
              "key": "context_is_admin",
              "value": "role:admin and rule:deny_readonly"
              }, 
            "sahara-data-processing:clusters:get": {
              "key": "data-processing:clusters:get",
              "value": ""
              }, 
            "sahara-deny_readonly": {
              "key": "deny_readonly",
              "value": "not role:readonly"
              }, 
            "sahara-data-processing:node-group-templates:create": {
              "key": "data-processing:node-group-templates:create",
              "value": "rule:deny_readonly"
              }, 
            "sahara-data-processing:plugins:convert_config": {
              "key": "data-processing:plugins:convert_config",
              "value": "rule:deny_readonly"
              }, 
            "sahara-data-processing:job-executions:get_all": {
              "key": "data-processing:job-executions:get_all",
              "value": ""
              }, 
            "sahara-data-processing:jobs:execute": {
              "key": "data-processing:jobs:execute",
              "value": "rule:deny_readonly"
              }, 
            "sahara-data-processing:cluster-templates:delete": {
              "key": "data-processing:cluster-templates:delete",
              "value": "rule:deny_readonly"
              }, 
            "sahara-data-processing:job-binaries:get_data": {
              "key": "data-processing:job-binaries:get_data",
              "value": ""
              }, 
            "sahara-default": {
              "key": "default",
              "value": ""
              }, 
            "sahara-data-processing:data-sources:get_all": {
              "key": "data-processing:data-sources:get_all",
              "value": ""
              }, 
            "sahara-data-processing:cluster-templates:get": {
              "key": "data-processing:cluster-templates:get",
              "value": ""
              }, 
            "sahara-data-processing:images:remove_tags": {
              "key": "data-processing:images:remove_tags",
              "value": "rule:deny_readonly"
              }, 
            "sahara-data-processing:node-group-templates:get_all": {
              "key": "data-processing:node-group-templates:get_all",
              "value": ""
              }, 
            "sahara-data-processing:data-sources:get": {
              "key": "data-processing:data-sources:get",
              "value": ""
              }, 
            "sahara-data-processing:jobs:modify": {
              "key": "data-processing:jobs:modify",
              "value": "rule:deny_readonly"
              }, 
            "sahara-data-processing:job-binary-internals:modify": {
              "key": "data-processing:job-binary-internals:modify",
              "value": "rule:deny_readonly"
              }, 
            "sahara-data-processing:jobs:create": {
              "key": "data-processing:jobs:create",
              "value": "rule:deny_readonly"
              }
        }
        zaqar::policy::policies: { 
            "zaqar-subscription:create": {
              "key": "subscription:create",
              "value": "rule:deny_readonly"
              }, 
            "zaqar-claims:update": {
              "key": "claims:update",
              "value": "rule:deny_readonly"
              }, 
            "zaqar-messages:get_all": {
              "key": "messages:get_all",
              "value": ""
              }, 
            "zaqar-messages:delete_all": {
              "key": "messages:delete_all",
              "value": "rule:deny_readonly"
              }, 
            "zaqar-pools:get_all": {
              "key": "pools:get_all",
              "value": "rule:context_is_admin"
              }, 
            "zaqar-pools:get": {
              "key": "pools:get",
              "value": "rule:context_is_admin"
              }, 
            "zaqar-queues:create": {
              "key": "queues:create",
              "value": "rule:deny_readonly"
              }, 
            "zaqar-flavors:update": {
              "key": "flavors:update",
              "value": "rule:context_is_admin"
              }, 
            "zaqar-health:get": {
              "key": "health:get",
              "value": "rule:context_is_admin"
              }, 
            "zaqar-messages:get": {
              "key": "messages:get",
              "value": ""
              }, 
            "zaqar-queues:get": {
              "key": "queues:get",
              "value": ""
              }, 
            "zaqar-subscription:confirm": {
              "key": "subscription:confirm",
              "value": "rule:deny_readonly"
              }, 
            "zaqar-ping:get": {
              "key": "ping:get",
              "value": ""
              }, 
            "zaqar-queues:stats": {
              "key": "queues:stats",
              "value": ""
              }, 
            "zaqar-queues:get_all": {
              "key": "queues:get_all",
              "value": ""
              }, 
            "zaqar-flavors:create": {
              "key": "flavors:create",
              "value": "rule:context_is_admin"
              }, 
            "zaqar-queues:update": {
              "key": "queues:update",
              "value": "rule:deny_readonly"
              }, 
            "zaqar-pools:delete": {
              "key": "pools:delete",
              "value": "rule:context_is_admin"
              }, 
            "zaqar-queues:delete": {
              "key": "queues:delete",
              "value": "rule:deny_readonly"
              }, 
            "zaqar-subscription:update": {
              "key": "subscription:update",
              "value": "rule:deny_readonly"
              }, 
            "zaqar-flavors:get": {
              "key": "flavors:get",
              "value": ""
              }, 
            "zaqar-admin_or_owner": {
              "key": "admin_or_owner",
              "value": "is_admin:True or project_id:%(project_id)s"
              }, 
            "zaqar-context_is_admin": {
              "key": "context_is_admin",
              "value": "role:admin and rule:deny_readonly"
              }, 
            "zaqar-deny_readonly": {
              "key": "deny_readonly",
              "value": "not role:readonly"
              }, 
            "zaqar-pools:update": {
              "key": "pools:update",
              "value": "rule:context_is_admin"
              }, 
            "zaqar-messages:delete": {
              "key": "messages:delete",
              "value": "rule:deny_readonly"
              }, 
            "zaqar-pools:create": {
              "key": "pools:create",
              "value": "rule:context_is_admin"
              }, 
            "zaqar-claims:create": {
              "key": "claims:create",
              "value": "rule:deny_readonly"
              }, 
            "zaqar-claims:delete": {
              "key": "claims:delete",
              "value": "rule:deny_readonly"
              }, 
            "zaqar-claims:get_all": {
              "key": "claims:get_all",
              "value": ""
              }, 
            "zaqar-default": {
              "key": "default",
              "value": "rule:admin_or_owner"
              }, 
            "zaqar-subscription:get_all": {
              "key": "subscription:get_all",
              "value": ""
              }, 
            "zaqar-claims:get": {
              "key": "claims:get",
              "value": ""
              }, 
            "zaqar-flavors:delete": {
              "key": "flavors:delete",
              "value": "rule:context_is_admin"
              }, 
            "zaqar-subscription:get": {
              "key": "subscription:get",
              "value": ""
              }, 
            "zaqar-subscription:delete": {
              "key": "subscription:delete",
              "value": "rule:deny_readonly"
              }, 
            "zaqar-messages:create": {
              "key": "messages:create",
              "value": "rule:deny_readonly"
              }, 
            "zaqar-flavors:get_all": {
              "key": "flavors:get_all",
              "value": ""
              }
        }
